// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: api/proto/scheduler.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskType int32

const (
	TaskType_TASK_TYPE_UNSPECIFIED TaskType = 0
	TaskType_TASK_TYPE_COMPUTE     TaskType = 1
	TaskType_TASK_TYPE_IO          TaskType = 2
	TaskType_TASK_TYPE_NETWORK     TaskType = 3
	TaskType_TASK_TYPE_MIXED       TaskType = 4
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TASK_TYPE_UNSPECIFIED",
		1: "TASK_TYPE_COMPUTE",
		2: "TASK_TYPE_IO",
		3: "TASK_TYPE_NETWORK",
		4: "TASK_TYPE_MIXED",
	}
	TaskType_value = map[string]int32{
		"TASK_TYPE_UNSPECIFIED": 0,
		"TASK_TYPE_COMPUTE":     1,
		"TASK_TYPE_IO":          2,
		"TASK_TYPE_NETWORK":     3,
		"TASK_TYPE_MIXED":       4,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_scheduler_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_api_proto_scheduler_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{0}
}

type NodeStatus int32

const (
	NodeStatus_NODE_STATUS_UNSPECIFIED NodeStatus = 0
	NodeStatus_NODE_STATUS_ACTIVE      NodeStatus = 1
	NodeStatus_NODE_STATUS_INACTIVE    NodeStatus = 2
	NodeStatus_NODE_STATUS_MAINTENANCE NodeStatus = 3
	NodeStatus_NODE_STATUS_OVERLOADED  NodeStatus = 4
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "NODE_STATUS_UNSPECIFIED",
		1: "NODE_STATUS_ACTIVE",
		2: "NODE_STATUS_INACTIVE",
		3: "NODE_STATUS_MAINTENANCE",
		4: "NODE_STATUS_OVERLOADED",
	}
	NodeStatus_value = map[string]int32{
		"NODE_STATUS_UNSPECIFIED": 0,
		"NODE_STATUS_ACTIVE":      1,
		"NODE_STATUS_INACTIVE":    2,
		"NODE_STATUS_MAINTENANCE": 3,
		"NODE_STATUS_OVERLOADED":  4,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_scheduler_proto_enumTypes[1].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_api_proto_scheduler_proto_enumTypes[1]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{1}
}

type SchedulingAlgorithm int32

const (
	SchedulingAlgorithm_SCHEDULING_ALGORITHM_UNSPECIFIED        SchedulingAlgorithm = 0
	SchedulingAlgorithm_SCHEDULING_ALGORITHM_FIFO               SchedulingAlgorithm = 1 // First In First Out
	SchedulingAlgorithm_SCHEDULING_ALGORITHM_PRIORITY           SchedulingAlgorithm = 2 // Priority-based
	SchedulingAlgorithm_SCHEDULING_ALGORITHM_SHORTEST_JOB_FIRST SchedulingAlgorithm = 3 // SJF
)

// Enum value maps for SchedulingAlgorithm.
var (
	SchedulingAlgorithm_name = map[int32]string{
		0: "SCHEDULING_ALGORITHM_UNSPECIFIED",
		1: "SCHEDULING_ALGORITHM_FIFO",
		2: "SCHEDULING_ALGORITHM_PRIORITY",
		3: "SCHEDULING_ALGORITHM_SHORTEST_JOB_FIRST",
	}
	SchedulingAlgorithm_value = map[string]int32{
		"SCHEDULING_ALGORITHM_UNSPECIFIED":        0,
		"SCHEDULING_ALGORITHM_FIFO":               1,
		"SCHEDULING_ALGORITHM_PRIORITY":           2,
		"SCHEDULING_ALGORITHM_SHORTEST_JOB_FIRST": 3,
	}
)

func (x SchedulingAlgorithm) Enum() *SchedulingAlgorithm {
	p := new(SchedulingAlgorithm)
	*p = x
	return p
}

func (x SchedulingAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulingAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_scheduler_proto_enumTypes[2].Descriptor()
}

func (SchedulingAlgorithm) Type() protoreflect.EnumType {
	return &file_api_proto_scheduler_proto_enumTypes[2]
}

func (x SchedulingAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulingAlgorithm.Descriptor instead.
func (SchedulingAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{2}
}

type ObjectiveFunction int32

const (
	ObjectiveFunction_OBJECTIVE_FUNCTION_UNSPECIFIED         ObjectiveFunction = 0
	ObjectiveFunction_OBJECTIVE_FUNCTION_MINIMIZE_LATENCY    ObjectiveFunction = 1
	ObjectiveFunction_OBJECTIVE_FUNCTION_MAXIMIZE_THROUGHPUT ObjectiveFunction = 2
	ObjectiveFunction_OBJECTIVE_FUNCTION_BALANCE_LOAD        ObjectiveFunction = 3
)

// Enum value maps for ObjectiveFunction.
var (
	ObjectiveFunction_name = map[int32]string{
		0: "OBJECTIVE_FUNCTION_UNSPECIFIED",
		1: "OBJECTIVE_FUNCTION_MINIMIZE_LATENCY",
		2: "OBJECTIVE_FUNCTION_MAXIMIZE_THROUGHPUT",
		3: "OBJECTIVE_FUNCTION_BALANCE_LOAD",
	}
	ObjectiveFunction_value = map[string]int32{
		"OBJECTIVE_FUNCTION_UNSPECIFIED":         0,
		"OBJECTIVE_FUNCTION_MINIMIZE_LATENCY":    1,
		"OBJECTIVE_FUNCTION_MAXIMIZE_THROUGHPUT": 2,
		"OBJECTIVE_FUNCTION_BALANCE_LOAD":        3,
	}
)

func (x ObjectiveFunction) Enum() *ObjectiveFunction {
	p := new(ObjectiveFunction)
	*p = x
	return p
}

func (x ObjectiveFunction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectiveFunction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_scheduler_proto_enumTypes[3].Descriptor()
}

func (ObjectiveFunction) Type() protoreflect.EnumType {
	return &file_api_proto_scheduler_proto_enumTypes[3]
}

func (x ObjectiveFunction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectiveFunction.Descriptor instead.
func (ObjectiveFunction) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{3}
}

type CacheAction int32

const (
	CacheAction_CACHE_ACTION_UNSPECIFIED CacheAction = 0
	CacheAction_CACHE_ACTION_NONE        CacheAction = 1 // No caching needed
	CacheAction_CACHE_ACTION_STORE       CacheAction = 2 // Execute and cache result
	CacheAction_CACHE_ACTION_USE         CacheAction = 3 // Use existing cache
	CacheAction_CACHE_ACTION_INVALIDATE  CacheAction = 4 // Delete cache only, serve scheduled result
)

// Enum value maps for CacheAction.
var (
	CacheAction_name = map[int32]string{
		0: "CACHE_ACTION_UNSPECIFIED",
		1: "CACHE_ACTION_NONE",
		2: "CACHE_ACTION_STORE",
		3: "CACHE_ACTION_USE",
		4: "CACHE_ACTION_INVALIDATE",
	}
	CacheAction_value = map[string]int32{
		"CACHE_ACTION_UNSPECIFIED": 0,
		"CACHE_ACTION_NONE":        1,
		"CACHE_ACTION_STORE":       2,
		"CACHE_ACTION_USE":         3,
		"CACHE_ACTION_INVALIDATE":  4,
	}
)

func (x CacheAction) Enum() *CacheAction {
	p := new(CacheAction)
	*p = x
	return p
}

func (x CacheAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CacheAction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_scheduler_proto_enumTypes[4].Descriptor()
}

func (CacheAction) Type() protoreflect.EnumType {
	return &file_api_proto_scheduler_proto_enumTypes[4]
}

func (x CacheAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CacheAction.Descriptor instead.
func (CacheAction) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{4}
}

// Task definition
type Task struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TaskId            string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName          string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	TaskType          TaskType               `protobuf:"varint,3,opt,name=task_type,json=taskType,proto3,enum=thesis.TaskType" json:"task_type,omitempty"`
	CpuRequirement    int64                  `protobuf:"varint,4,opt,name=cpu_requirement,json=cpuRequirement,proto3" json:"cpu_requirement,omitempty"`                                        // CPU units needed
	MemoryRequirement int64                  `protobuf:"varint,5,opt,name=memory_requirement,json=memoryRequirement,proto3" json:"memory_requirement,omitempty"`                               // Memory in MB
	ExecutionTime     int64                  `protobuf:"varint,6,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`                                           // Estimated execution time in ms
	Priority          int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`                                                                          // Task priority (1-10, 10 = highest)
	Deadline          int64                  `protobuf:"varint,10,opt,name=deadline,proto3" json:"deadline,omitempty"`                                                                         // Task deadline as Unix timestamp
	Dependencies      []string               `protobuf:"bytes,8,rep,name=dependencies,proto3" json:"dependencies,omitempty"`                                                                   // Task IDs this task depends on
	Metadata          map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional task metadata
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_api_proto_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Task) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *Task) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_TYPE_UNSPECIFIED
}

func (x *Task) GetCpuRequirement() int64 {
	if x != nil {
		return x.CpuRequirement
	}
	return 0
}

func (x *Task) GetMemoryRequirement() int64 {
	if x != nil {
		return x.MemoryRequirement
	}
	return 0
}

func (x *Task) GetExecutionTime() int64 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

func (x *Task) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Task) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *Task) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *Task) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Fog node definition
type FogNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeName      string                 `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Status        NodeStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=thesis.NodeStatus" json:"status,omitempty"`
	Capacity      *ResourceCapacity      `protobuf:"bytes,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	CurrentUsage  *ResourceUsage         `protobuf:"bytes,5,opt,name=current_usage,json=currentUsage,proto3" json:"current_usage,omitempty"`
	Location      *Location              `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FogNode) Reset() {
	*x = FogNode{}
	mi := &file_api_proto_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FogNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FogNode) ProtoMessage() {}

func (x *FogNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FogNode.ProtoReflect.Descriptor instead.
func (*FogNode) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *FogNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *FogNode) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *FogNode) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_NODE_STATUS_UNSPECIFIED
}

func (x *FogNode) GetCapacity() *ResourceCapacity {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *FogNode) GetCurrentUsage() *ResourceUsage {
	if x != nil {
		return x.CurrentUsage
	}
	return nil
}

func (x *FogNode) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *FogNode) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ResourceCapacity struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CpuCores             int64                  `protobuf:"varint,1,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	MemoryMb             int64                  `protobuf:"varint,2,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	StorageGb            int64                  `protobuf:"varint,3,opt,name=storage_gb,json=storageGb,proto3" json:"storage_gb,omitempty"`
	NetworkBandwidthMbps int64                  `protobuf:"varint,4,opt,name=network_bandwidth_mbps,json=networkBandwidthMbps,proto3" json:"network_bandwidth_mbps,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ResourceCapacity) Reset() {
	*x = ResourceCapacity{}
	mi := &file_api_proto_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceCapacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCapacity) ProtoMessage() {}

func (x *ResourceCapacity) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCapacity.ProtoReflect.Descriptor instead.
func (*ResourceCapacity) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceCapacity) GetCpuCores() int64 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *ResourceCapacity) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceCapacity) GetStorageGb() int64 {
	if x != nil {
		return x.StorageGb
	}
	return 0
}

func (x *ResourceCapacity) GetNetworkBandwidthMbps() int64 {
	if x != nil {
		return x.NetworkBandwidthMbps
	}
	return 0
}

type ResourceUsage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage         int64                  `protobuf:"varint,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`                           // Current CPU usage (percentage)
	MemoryUsageMb    int64                  `protobuf:"varint,2,opt,name=memory_usage_mb,json=memoryUsageMb,proto3" json:"memory_usage_mb,omitempty"`          // Current memory usage in MB
	StorageUsageGb   int64                  `protobuf:"varint,3,opt,name=storage_usage_gb,json=storageUsageGb,proto3" json:"storage_usage_gb,omitempty"`       // Current storage usage in GB
	NetworkUsageMbps int64                  `protobuf:"varint,4,opt,name=network_usage_mbps,json=networkUsageMbps,proto3" json:"network_usage_mbps,omitempty"` // Current network usage in Mbps
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_api_proto_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceUsage) GetCpuUsage() int64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ResourceUsage) GetMemoryUsageMb() int64 {
	if x != nil {
		return x.MemoryUsageMb
	}
	return 0
}

func (x *ResourceUsage) GetStorageUsageGb() int64 {
	if x != nil {
		return x.StorageUsageGb
	}
	return 0
}

func (x *ResourceUsage) GetNetworkUsageMbps() int64 {
	if x != nil {
		return x.NetworkUsageMbps
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Region        string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_api_proto_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// Request/Response messages
type AddTaskToQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Policy        *SchedulingPolicy      `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTaskToQueueRequest) Reset() {
	*x = AddTaskToQueueRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskToQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskToQueueRequest) ProtoMessage() {}

func (x *AddTaskToQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskToQueueRequest.ProtoReflect.Descriptor instead.
func (*AddTaskToQueueRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *AddTaskToQueueRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *AddTaskToQueueRequest) GetPolicy() *SchedulingPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type AddTaskToQueueResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TaskId              string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Success             bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message             string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	QueuePosition       int64                  `protobuf:"varint,4,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`
	EstimatedWaitTimeMs int64                  `protobuf:"varint,5,opt,name=estimated_wait_time_ms,json=estimatedWaitTimeMs,proto3" json:"estimated_wait_time_ms,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AddTaskToQueueResponse) Reset() {
	*x = AddTaskToQueueResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTaskToQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskToQueueResponse) ProtoMessage() {}

func (x *AddTaskToQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskToQueueResponse.ProtoReflect.Descriptor instead.
func (*AddTaskToQueueResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{6}
}

func (x *AddTaskToQueueResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *AddTaskToQueueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddTaskToQueueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddTaskToQueueResponse) GetQueuePosition() int64 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *AddTaskToQueueResponse) GetEstimatedWaitTimeMs() int64 {
	if x != nil {
		return x.EstimatedWaitTimeMs
	}
	return 0
}

type SchedulingPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Algorithm     SchedulingAlgorithm    `protobuf:"varint,1,opt,name=algorithm,proto3,enum=thesis.SchedulingAlgorithm" json:"algorithm,omitempty"`
	Objective     ObjectiveFunction      `protobuf:"varint,2,opt,name=objective,proto3,enum=thesis.ObjectiveFunction" json:"objective,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchedulingPolicy) Reset() {
	*x = SchedulingPolicy{}
	mi := &file_api_proto_scheduler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchedulingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingPolicy) ProtoMessage() {}

func (x *SchedulingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingPolicy.ProtoReflect.Descriptor instead.
func (*SchedulingPolicy) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{7}
}

func (x *SchedulingPolicy) GetAlgorithm() SchedulingAlgorithm {
	if x != nil {
		return x.Algorithm
	}
	return SchedulingAlgorithm_SCHEDULING_ALGORITHM_UNSPECIFIED
}

func (x *SchedulingPolicy) GetObjective() ObjectiveFunction {
	if x != nil {
		return x.Objective
	}
	return ObjectiveFunction_OBJECTIVE_FUNCTION_UNSPECIFIED
}

func (x *SchedulingPolicy) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type SchedulingDecision struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AlgorithmUsed   SchedulingAlgorithm    `protobuf:"varint,1,opt,name=algorithm_used,json=algorithmUsed,proto3,enum=thesis.SchedulingAlgorithm" json:"algorithm_used,omitempty"`
	ObjectiveUsed   ObjectiveFunction      `protobuf:"varint,2,opt,name=objective_used,json=objectiveUsed,proto3,enum=thesis.ObjectiveFunction" json:"objective_used,omitempty"`
	ConfidenceScore float64                `protobuf:"fixed64,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`                                                            // RL agent confidence (0.0-1.0)
	DecisionTimeMs  int64                  `protobuf:"varint,4,opt,name=decision_time_ms,json=decisionTimeMs,proto3" json:"decision_time_ms,omitempty"`                                                              // Time taken to make decision
	Reasoning       string                 `protobuf:"bytes,5,opt,name=reasoning,proto3" json:"reasoning,omitempty"`                                                                                                 // Human-readable decision reasoning
	NodeScores      map[string]float64     `protobuf:"bytes,6,rep,name=node_scores,json=nodeScores,proto3" json:"node_scores,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // Scores for each considered node
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SchedulingDecision) Reset() {
	*x = SchedulingDecision{}
	mi := &file_api_proto_scheduler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchedulingDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingDecision) ProtoMessage() {}

func (x *SchedulingDecision) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingDecision.ProtoReflect.Descriptor instead.
func (*SchedulingDecision) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{8}
}

func (x *SchedulingDecision) GetAlgorithmUsed() SchedulingAlgorithm {
	if x != nil {
		return x.AlgorithmUsed
	}
	return SchedulingAlgorithm_SCHEDULING_ALGORITHM_UNSPECIFIED
}

func (x *SchedulingDecision) GetObjectiveUsed() ObjectiveFunction {
	if x != nil {
		return x.ObjectiveUsed
	}
	return ObjectiveFunction_OBJECTIVE_FUNCTION_UNSPECIFIED
}

func (x *SchedulingDecision) GetConfidenceScore() float64 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *SchedulingDecision) GetDecisionTimeMs() int64 {
	if x != nil {
		return x.DecisionTimeMs
	}
	return 0
}

func (x *SchedulingDecision) GetReasoning() string {
	if x != nil {
		return x.Reasoning
	}
	return ""
}

func (x *SchedulingDecision) GetNodeScores() map[string]float64 {
	if x != nil {
		return x.NodeScores
	}
	return nil
}

type GetSchedulingStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // Optional: get status for specific node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchedulingStatusRequest) Reset() {
	*x = GetSchedulingStatusRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedulingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulingStatusRequest) ProtoMessage() {}

func (x *GetSchedulingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulingStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSchedulingStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{9}
}

func (x *GetSchedulingStatusRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetSchedulingStatusResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	NodeStatuses          []NodeStatus           `protobuf:"varint,1,rep,packed,name=node_statuses,json=nodeStatuses,proto3,enum=thesis.NodeStatus" json:"node_statuses,omitempty"`
	TotalTasksScheduled   int64                  `protobuf:"varint,2,opt,name=total_tasks_scheduled,json=totalTasksScheduled,proto3" json:"total_tasks_scheduled,omitempty"`
	TotalTasksCompleted   int64                  `protobuf:"varint,3,opt,name=total_tasks_completed,json=totalTasksCompleted,proto3" json:"total_tasks_completed,omitempty"`
	TotalTasksFailed      int64                  `protobuf:"varint,4,opt,name=total_tasks_failed,json=totalTasksFailed,proto3" json:"total_tasks_failed,omitempty"`
	AverageResponseTimeMs float64                `protobuf:"fixed64,5,opt,name=average_response_time_ms,json=averageResponseTimeMs,proto3" json:"average_response_time_ms,omitempty"`
	SystemMetrics         map[string]string      `protobuf:"bytes,6,rep,name=system_metrics,json=systemMetrics,proto3" json:"system_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetSchedulingStatusResponse) Reset() {
	*x = GetSchedulingStatusResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedulingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulingStatusResponse) ProtoMessage() {}

func (x *GetSchedulingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulingStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSchedulingStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{10}
}

func (x *GetSchedulingStatusResponse) GetNodeStatuses() []NodeStatus {
	if x != nil {
		return x.NodeStatuses
	}
	return nil
}

func (x *GetSchedulingStatusResponse) GetTotalTasksScheduled() int64 {
	if x != nil {
		return x.TotalTasksScheduled
	}
	return 0
}

func (x *GetSchedulingStatusResponse) GetTotalTasksCompleted() int64 {
	if x != nil {
		return x.TotalTasksCompleted
	}
	return 0
}

func (x *GetSchedulingStatusResponse) GetTotalTasksFailed() int64 {
	if x != nil {
		return x.TotalTasksFailed
	}
	return 0
}

func (x *GetSchedulingStatusResponse) GetAverageResponseTimeMs() float64 {
	if x != nil {
		return x.AverageResponseTimeMs
	}
	return 0
}

func (x *GetSchedulingStatusResponse) GetSystemMetrics() map[string]string {
	if x != nil {
		return x.SystemMetrics
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{11}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{12}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// System Metrics
type GetSystemMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSystemMetricsRequest) Reset() {
	*x = GetSystemMetricsRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemMetricsRequest) ProtoMessage() {}

func (x *GetSystemMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetSystemMetricsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{13}
}

type GetSystemMetricsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UptimeSeconds      int64                  `protobuf:"varint,1,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	CpuUsagePercent    float64                `protobuf:"fixed64,2,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsageMb      int64                  `protobuf:"varint,3,opt,name=memory_usage_mb,json=memoryUsageMb,proto3" json:"memory_usage_mb,omitempty"`
	TotalRequests      int64                  `protobuf:"varint,4,opt,name=total_requests,json=totalRequests,proto3" json:"total_requests,omitempty"`
	SuccessfulRequests int64                  `protobuf:"varint,5,opt,name=successful_requests,json=successfulRequests,proto3" json:"successful_requests,omitempty"`
	FailedRequests     int64                  `protobuf:"varint,6,opt,name=failed_requests,json=failedRequests,proto3" json:"failed_requests,omitempty"`
	SuccessRatePercent float64                `protobuf:"fixed64,7,opt,name=success_rate_percent,json=successRatePercent,proto3" json:"success_rate_percent,omitempty"`
	AvgResponseTimeMs  float64                `protobuf:"fixed64,8,opt,name=avg_response_time_ms,json=avgResponseTimeMs,proto3" json:"avg_response_time_ms,omitempty"`
	ActiveConnections  int32                  `protobuf:"varint,9,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	Timestamp          int64                  `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetSystemMetricsResponse) Reset() {
	*x = GetSystemMetricsResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemMetricsResponse) ProtoMessage() {}

func (x *GetSystemMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetSystemMetricsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{14}
}

func (x *GetSystemMetricsResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetMemoryUsageMb() int64 {
	if x != nil {
		return x.MemoryUsageMb
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetTotalRequests() int64 {
	if x != nil {
		return x.TotalRequests
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetSuccessfulRequests() int64 {
	if x != nil {
		return x.SuccessfulRequests
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetFailedRequests() int64 {
	if x != nil {
		return x.FailedRequests
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetSuccessRatePercent() float64 {
	if x != nil {
		return x.SuccessRatePercent
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetAvgResponseTimeMs() float64 {
	if x != nil {
		return x.AvgResponseTimeMs
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *GetSystemMetricsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Node Registry
type GetNodeRegistryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRegistryRequest) Reset() {
	*x = GetNodeRegistryRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRegistryRequest) ProtoMessage() {}

func (x *GetNodeRegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRegistryRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRegistryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{15}
}

type GetNodeRegistryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*NodeSummary         `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	TotalNodes    int64                  `protobuf:"varint,2,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	ActiveNodes   int64                  `protobuf:"varint,3,opt,name=active_nodes,json=activeNodes,proto3" json:"active_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRegistryResponse) Reset() {
	*x = GetNodeRegistryResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRegistryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRegistryResponse) ProtoMessage() {}

func (x *GetNodeRegistryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRegistryResponse.ProtoReflect.Descriptor instead.
func (*GetNodeRegistryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{16}
}

func (x *GetNodeRegistryResponse) GetNodes() []*NodeSummary {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetNodeRegistryResponse) GetTotalNodes() int64 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *GetNodeRegistryResponse) GetActiveNodes() int64 {
	if x != nil {
		return x.ActiveNodes
	}
	return 0
}

type NodeSummary struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NodeId             string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status             NodeStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=thesis.NodeStatus" json:"status,omitempty"`
	UtilizationPercent float64                `protobuf:"fixed64,3,opt,name=utilization_percent,json=utilizationPercent,proto3" json:"utilization_percent,omitempty"`
	TasksAssigned      int64                  `protobuf:"varint,4,opt,name=tasks_assigned,json=tasksAssigned,proto3" json:"tasks_assigned,omitempty"`
	Region             string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NodeSummary) Reset() {
	*x = NodeSummary{}
	mi := &file_api_proto_scheduler_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSummary) ProtoMessage() {}

func (x *NodeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSummary.ProtoReflect.Descriptor instead.
func (*NodeSummary) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{17}
}

func (x *NodeSummary) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeSummary) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_NODE_STATUS_UNSPECIFIED
}

func (x *NodeSummary) GetUtilizationPercent() float64 {
	if x != nil {
		return x.UtilizationPercent
	}
	return 0
}

func (x *NodeSummary) GetTasksAssigned() int64 {
	if x != nil {
		return x.TasksAssigned
	}
	return 0
}

func (x *NodeSummary) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// Scheduling Statistics
type GetSchedulingStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchedulingStatsRequest) Reset() {
	*x = GetSchedulingStatsRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedulingStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulingStatsRequest) ProtoMessage() {}

func (x *GetSchedulingStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulingStatsRequest.ProtoReflect.Descriptor instead.
func (*GetSchedulingStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{18}
}

type GetSchedulingStatsResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AlgorithmUsage       map[string]int64       `protobuf:"bytes,1,rep,name=algorithm_usage,json=algorithmUsage,proto3" json:"algorithm_usage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	AlgorithmPerformance map[string]float32     `protobuf:"bytes,2,rep,name=algorithm_performance,json=algorithmPerformance,proto3" json:"algorithm_performance,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	OverallEfficiency    float32                `protobuf:"fixed32,3,opt,name=overall_efficiency,json=overallEfficiency,proto3" json:"overall_efficiency,omitempty"`
	TotalTasksProcessed  int64                  `protobuf:"varint,4,opt,name=total_tasks_processed,json=totalTasksProcessed,proto3" json:"total_tasks_processed,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetSchedulingStatsResponse) Reset() {
	*x = GetSchedulingStatsResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedulingStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedulingStatsResponse) ProtoMessage() {}

func (x *GetSchedulingStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedulingStatsResponse.ProtoReflect.Descriptor instead.
func (*GetSchedulingStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{19}
}

func (x *GetSchedulingStatsResponse) GetAlgorithmUsage() map[string]int64 {
	if x != nil {
		return x.AlgorithmUsage
	}
	return nil
}

func (x *GetSchedulingStatsResponse) GetAlgorithmPerformance() map[string]float32 {
	if x != nil {
		return x.AlgorithmPerformance
	}
	return nil
}

func (x *GetSchedulingStatsResponse) GetOverallEfficiency() float32 {
	if x != nil {
		return x.OverallEfficiency
	}
	return 0
}

func (x *GetSchedulingStatsResponse) GetTotalTasksProcessed() int64 {
	if x != nil {
		return x.TotalTasksProcessed
	}
	return 0
}

// Dashboard
type GetDashboardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardRequest) Reset() {
	*x = GetDashboardRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardRequest) ProtoMessage() {}

func (x *GetDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{20}
}

type GetDashboardResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Status           *SystemStatus          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RecentActivities []string               `protobuf:"bytes,2,rep,name=recent_activities,json=recentActivities,proto3" json:"recent_activities,omitempty"`
	Alerts           []string               `protobuf:"bytes,3,rep,name=alerts,proto3" json:"alerts,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetDashboardResponse) Reset() {
	*x = GetDashboardResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardResponse) ProtoMessage() {}

func (x *GetDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{21}
}

func (x *GetDashboardResponse) GetStatus() *SystemStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetDashboardResponse) GetRecentActivities() []string {
	if x != nil {
		return x.RecentActivities
	}
	return nil
}

func (x *GetDashboardResponse) GetAlerts() []string {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type SystemStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerStatus  string                 `protobuf:"bytes,1,opt,name=server_status,json=serverStatus,proto3" json:"server_status,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,2,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	ActiveNodes   int64                  `protobuf:"varint,3,opt,name=active_nodes,json=activeNodes,proto3" json:"active_nodes,omitempty"`
	TasksToday    int64                  `protobuf:"varint,4,opt,name=tasks_today,json=tasksToday,proto3" json:"tasks_today,omitempty"`
	CurrentLoad   float64                `protobuf:"fixed64,5,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemStatus) Reset() {
	*x = SystemStatus{}
	mi := &file_api_proto_scheduler_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatus) ProtoMessage() {}

func (x *SystemStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatus.ProtoReflect.Descriptor instead.
func (*SystemStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{22}
}

func (x *SystemStatus) GetServerStatus() string {
	if x != nil {
		return x.ServerStatus
	}
	return ""
}

func (x *SystemStatus) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *SystemStatus) GetActiveNodes() int64 {
	if x != nil {
		return x.ActiveNodes
	}
	return 0
}

func (x *SystemStatus) GetTasksToday() int64 {
	if x != nil {
		return x.TasksToday
	}
	return 0
}

func (x *SystemStatus) GetCurrentLoad() float64 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

// Request to update objective weights
type UpdateObjectiveWeightsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Weights       map[string]float64     `protobuf:"bytes,1,rep,name=weights,proto3" json:"weights,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // Key: objective name (e.g., "latency"), Value: weight (0.0-1.0)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateObjectiveWeightsRequest) Reset() {
	*x = UpdateObjectiveWeightsRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateObjectiveWeightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectiveWeightsRequest) ProtoMessage() {}

func (x *UpdateObjectiveWeightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectiveWeightsRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectiveWeightsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateObjectiveWeightsRequest) GetWeights() map[string]float64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

// Response for objective weights update
type UpdateObjectiveWeightsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Confirmation or error details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateObjectiveWeightsResponse) Reset() {
	*x = UpdateObjectiveWeightsResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateObjectiveWeightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectiveWeightsResponse) ProtoMessage() {}

func (x *UpdateObjectiveWeightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectiveWeightsResponse.ProtoReflect.Descriptor instead.
func (*UpdateObjectiveWeightsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateObjectiveWeightsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateObjectiveWeightsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Task completion reporting for delayed reward system
type TaskCompletionReport struct {
	state               protoimpl.MessageState    `protogen:"open.v1"`
	TaskId              string                    `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // Using task_id as unique identifier
	Tasks               []*CompletedTask          `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Metrics             *SystemPerformanceMetrics `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	CompletionTimestamp int64                     `protobuf:"varint,4,opt,name=completion_timestamp,json=completionTimestamp,proto3" json:"completion_timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TaskCompletionReport) Reset() {
	*x = TaskCompletionReport{}
	mi := &file_api_proto_scheduler_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCompletionReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletionReport) ProtoMessage() {}

func (x *TaskCompletionReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletionReport.ProtoReflect.Descriptor instead.
func (*TaskCompletionReport) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{25}
}

func (x *TaskCompletionReport) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCompletionReport) GetTasks() []*CompletedTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *TaskCompletionReport) GetMetrics() *SystemPerformanceMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *TaskCompletionReport) GetCompletionTimestamp() int64 {
	if x != nil {
		return x.CompletionTimestamp
	}
	return 0
}

type CompletedTask struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TaskId                string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AssignedNodeId        string                 `protobuf:"bytes,2,opt,name=assigned_node_id,json=assignedNodeId,proto3" json:"assigned_node_id,omitempty"`
	ActualExecutionTimeMs float64                `protobuf:"fixed64,3,opt,name=actual_execution_time_ms,json=actualExecutionTimeMs,proto3" json:"actual_execution_time_ms,omitempty"`
	ActualLatencyMs       float64                `protobuf:"fixed64,4,opt,name=actual_latency_ms,json=actualLatencyMs,proto3" json:"actual_latency_ms,omitempty"`
	EnergyConsumed        float64                `protobuf:"fixed64,5,opt,name=energy_consumed,json=energyConsumed,proto3" json:"energy_consumed,omitempty"`
	DeadlineMet           bool                   `protobuf:"varint,6,opt,name=deadline_met,json=deadlineMet,proto3" json:"deadline_met,omitempty"`
	StartTime             int64                  `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	CompletionTime        int64                  `protobuf:"varint,8,opt,name=completion_time,json=completionTime,proto3" json:"completion_time,omitempty"`
	ResourceUsage         map[string]float64     `protobuf:"bytes,9,rep,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CompletedTask) Reset() {
	*x = CompletedTask{}
	mi := &file_api_proto_scheduler_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedTask) ProtoMessage() {}

func (x *CompletedTask) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedTask.ProtoReflect.Descriptor instead.
func (*CompletedTask) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{26}
}

func (x *CompletedTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CompletedTask) GetAssignedNodeId() string {
	if x != nil {
		return x.AssignedNodeId
	}
	return ""
}

func (x *CompletedTask) GetActualExecutionTimeMs() float64 {
	if x != nil {
		return x.ActualExecutionTimeMs
	}
	return 0
}

func (x *CompletedTask) GetActualLatencyMs() float64 {
	if x != nil {
		return x.ActualLatencyMs
	}
	return 0
}

func (x *CompletedTask) GetEnergyConsumed() float64 {
	if x != nil {
		return x.EnergyConsumed
	}
	return 0
}

func (x *CompletedTask) GetDeadlineMet() bool {
	if x != nil {
		return x.DeadlineMet
	}
	return false
}

func (x *CompletedTask) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CompletedTask) GetCompletionTime() int64 {
	if x != nil {
		return x.CompletionTime
	}
	return 0
}

func (x *CompletedTask) GetResourceUsage() map[string]float64 {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

type SystemPerformanceMetrics struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalThroughput     float64                `protobuf:"fixed64,1,opt,name=total_throughput,json=totalThroughput,proto3" json:"total_throughput,omitempty"`
	AverageLatencyMs    float64                `protobuf:"fixed64,2,opt,name=average_latency_ms,json=averageLatencyMs,proto3" json:"average_latency_ms,omitempty"`
	EnergyEfficiency    float64                `protobuf:"fixed64,3,opt,name=energy_efficiency,json=energyEfficiency,proto3" json:"energy_efficiency,omitempty"`
	ResourceUtilization float64                `protobuf:"fixed64,4,opt,name=resource_utilization,json=resourceUtilization,proto3" json:"resource_utilization,omitempty"`
	DeadlineMisses      int32                  `protobuf:"varint,5,opt,name=deadline_misses,json=deadlineMisses,proto3" json:"deadline_misses,omitempty"`
	FairnessIndex       float64                `protobuf:"fixed64,6,opt,name=fairness_index,json=fairnessIndex,proto3" json:"fairness_index,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SystemPerformanceMetrics) Reset() {
	*x = SystemPerformanceMetrics{}
	mi := &file_api_proto_scheduler_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemPerformanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemPerformanceMetrics) ProtoMessage() {}

func (x *SystemPerformanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemPerformanceMetrics.ProtoReflect.Descriptor instead.
func (*SystemPerformanceMetrics) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{27}
}

func (x *SystemPerformanceMetrics) GetTotalThroughput() float64 {
	if x != nil {
		return x.TotalThroughput
	}
	return 0
}

func (x *SystemPerformanceMetrics) GetAverageLatencyMs() float64 {
	if x != nil {
		return x.AverageLatencyMs
	}
	return 0
}

func (x *SystemPerformanceMetrics) GetEnergyEfficiency() float64 {
	if x != nil {
		return x.EnergyEfficiency
	}
	return 0
}

func (x *SystemPerformanceMetrics) GetResourceUtilization() float64 {
	if x != nil {
		return x.ResourceUtilization
	}
	return 0
}

func (x *SystemPerformanceMetrics) GetDeadlineMisses() int32 {
	if x != nil {
		return x.DeadlineMisses
	}
	return 0
}

func (x *SystemPerformanceMetrics) GetFairnessIndex() float64 {
	if x != nil {
		return x.FairnessIndex
	}
	return 0
}

type TaskCompletionAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCompletionAck) Reset() {
	*x = TaskCompletionAck{}
	mi := &file_api_proto_scheduler_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCompletionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletionAck) ProtoMessage() {}

func (x *TaskCompletionAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletionAck.ProtoReflect.Descriptor instead.
func (*TaskCompletionAck) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{28}
}

func (x *TaskCompletionAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskCompletionAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Queue-based response messages
type GetSortedQueueRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IncludeMetadata bool                   `protobuf:"varint,1,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"` // Include algorithm info, timestamps, etc.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSortedQueueRequest) Reset() {
	*x = GetSortedQueueRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSortedQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSortedQueueRequest) ProtoMessage() {}

func (x *GetSortedQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSortedQueueRequest.ProtoReflect.Descriptor instead.
func (*GetSortedQueueRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{29}
}

func (x *GetSortedQueueRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

type GetSortedQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SortedTasks   []*Task                `protobuf:"bytes,1,rep,name=sorted_tasks,json=sortedTasks,proto3" json:"sorted_tasks,omitempty"`
	AlgorithmUsed string                 `protobuf:"bytes,2,opt,name=algorithm_used,json=algorithmUsed,proto3" json:"algorithm_used,omitempty"`
	QueueSize     int64                  `protobuf:"varint,3,opt,name=queue_size,json=queueSize,proto3" json:"queue_size,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeId        string                 `protobuf:"bytes,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSortedQueueResponse) Reset() {
	*x = GetSortedQueueResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSortedQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSortedQueueResponse) ProtoMessage() {}

func (x *GetSortedQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSortedQueueResponse.ProtoReflect.Descriptor instead.
func (*GetSortedQueueResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{30}
}

func (x *GetSortedQueueResponse) GetSortedTasks() []*Task {
	if x != nil {
		return x.SortedTasks
	}
	return nil
}

func (x *GetSortedQueueResponse) GetAlgorithmUsed() string {
	if x != nil {
		return x.AlgorithmUsed
	}
	return ""
}

func (x *GetSortedQueueResponse) GetQueueSize() int64 {
	if x != nil {
		return x.QueueSize
	}
	return 0
}

func (x *GetSortedQueueResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetSortedQueueResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetSortedQueueResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SubscribeRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IncludeMetadata  bool                   `protobuf:"varint,1,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`      // Include algorithm info, timestamps, etc.
	UpdateIntervalMs int32                  `protobuf:"varint,2,opt,name=update_interval_ms,json=updateIntervalMs,proto3" json:"update_interval_ms,omitempty"` // Requested update interval (server may override)
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_api_proto_scheduler_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{31}
}

func (x *SubscribeRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

func (x *SubscribeRequest) GetUpdateIntervalMs() int32 {
	if x != nil {
		return x.UpdateIntervalMs
	}
	return 0
}

type QueueUpdateResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SortedTasks     []*Task                `protobuf:"bytes,1,rep,name=sorted_tasks,json=sortedTasks,proto3" json:"sorted_tasks,omitempty"`
	AlgorithmUsed   string                 `protobuf:"bytes,2,opt,name=algorithm_used,json=algorithmUsed,proto3" json:"algorithm_used,omitempty"`
	ConfidenceScore float64                `protobuf:"fixed64,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	UpdateTimestamp int64                  `protobuf:"varint,4,opt,name=update_timestamp,json=updateTimestamp,proto3" json:"update_timestamp,omitempty"`
	UpdateReason    string                 `protobuf:"bytes,5,opt,name=update_reason,json=updateReason,proto3" json:"update_reason,omitempty"` // "periodic", "new_task", "rl_learning", "manual"
	NodeId          string                 `protobuf:"bytes,6,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueueUpdateResponse) Reset() {
	*x = QueueUpdateResponse{}
	mi := &file_api_proto_scheduler_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueUpdateResponse) ProtoMessage() {}

func (x *QueueUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_scheduler_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueUpdateResponse.ProtoReflect.Descriptor instead.
func (*QueueUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_scheduler_proto_rawDescGZIP(), []int{32}
}

func (x *QueueUpdateResponse) GetSortedTasks() []*Task {
	if x != nil {
		return x.SortedTasks
	}
	return nil
}

func (x *QueueUpdateResponse) GetAlgorithmUsed() string {
	if x != nil {
		return x.AlgorithmUsed
	}
	return ""
}

func (x *QueueUpdateResponse) GetConfidenceScore() float64 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *QueueUpdateResponse) GetUpdateTimestamp() int64 {
	if x != nil {
		return x.UpdateTimestamp
	}
	return 0
}

func (x *QueueUpdateResponse) GetUpdateReason() string {
	if x != nil {
		return x.UpdateReason
	}
	return ""
}

func (x *QueueUpdateResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *QueueUpdateResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_api_proto_scheduler_proto protoreflect.FileDescriptor

const file_api_proto_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x19api/proto/scheduler.proto\x12\x06thesis\"\xbb\x03\n" +
	"\x04Task\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x02 \x01(\tR\btaskName\x12-\n" +
	"\ttask_type\x18\x03 \x01(\x0e2\x10.thesis.TaskTypeR\btaskType\x12'\n" +
	"\x0fcpu_requirement\x18\x04 \x01(\x03R\x0ecpuRequirement\x12-\n" +
	"\x12memory_requirement\x18\x05 \x01(\x03R\x11memoryRequirement\x12%\n" +
	"\x0eexecution_time\x18\x06 \x01(\x03R\rexecutionTime\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x12\x1a\n" +
	"\bdeadline\x18\n" +
	" \x01(\x03R\bdeadline\x12\"\n" +
	"\fdependencies\x18\b \x03(\tR\fdependencies\x126\n" +
	"\bmetadata\x18\t \x03(\v2\x1a.thesis.Task.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x83\x03\n" +
	"\aFogNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x12*\n" +
	"\x06status\x18\x03 \x01(\x0e2\x12.thesis.NodeStatusR\x06status\x124\n" +
	"\bcapacity\x18\x04 \x01(\v2\x18.thesis.ResourceCapacityR\bcapacity\x12:\n" +
	"\rcurrent_usage\x18\x05 \x01(\v2\x15.thesis.ResourceUsageR\fcurrentUsage\x12,\n" +
	"\blocation\x18\x06 \x01(\v2\x10.thesis.LocationR\blocation\x129\n" +
	"\bmetadata\x18\a \x03(\v2\x1d.thesis.FogNode.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa1\x01\n" +
	"\x10ResourceCapacity\x12\x1b\n" +
	"\tcpu_cores\x18\x01 \x01(\x03R\bcpuCores\x12\x1b\n" +
	"\tmemory_mb\x18\x02 \x01(\x03R\bmemoryMb\x12\x1d\n" +
	"\n" +
	"storage_gb\x18\x03 \x01(\x03R\tstorageGb\x124\n" +
	"\x16network_bandwidth_mbps\x18\x04 \x01(\x03R\x14networkBandwidthMbps\"\xac\x01\n" +
	"\rResourceUsage\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x03R\bcpuUsage\x12&\n" +
	"\x0fmemory_usage_mb\x18\x02 \x01(\x03R\rmemoryUsageMb\x12(\n" +
	"\x10storage_usage_gb\x18\x03 \x01(\x03R\x0estorageUsageGb\x12,\n" +
	"\x12network_usage_mbps\x18\x04 \x01(\x03R\x10networkUsageMbps\"\\\n" +
	"\bLocation\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\"k\n" +
	"\x15AddTaskToQueueRequest\x12 \n" +
	"\x04task\x18\x01 \x01(\v2\f.thesis.TaskR\x04task\x120\n" +
	"\x06policy\x18\x02 \x01(\v2\x18.thesis.SchedulingPolicyR\x06policy\"\xc1\x01\n" +
	"\x16AddTaskToQueueResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12%\n" +
	"\x0equeue_position\x18\x04 \x01(\x03R\rqueuePosition\x123\n" +
	"\x16estimated_wait_time_ms\x18\x05 \x01(\x03R\x13estimatedWaitTimeMs\"\x8f\x02\n" +
	"\x10SchedulingPolicy\x129\n" +
	"\talgorithm\x18\x01 \x01(\x0e2\x1b.thesis.SchedulingAlgorithmR\talgorithm\x127\n" +
	"\tobjective\x18\x02 \x01(\x0e2\x19.thesis.ObjectiveFunctionR\tobjective\x12H\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2(.thesis.SchedulingPolicy.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x03\n" +
	"\x12SchedulingDecision\x12B\n" +
	"\x0ealgorithm_used\x18\x01 \x01(\x0e2\x1b.thesis.SchedulingAlgorithmR\ralgorithmUsed\x12@\n" +
	"\x0eobjective_used\x18\x02 \x01(\x0e2\x19.thesis.ObjectiveFunctionR\robjectiveUsed\x12)\n" +
	"\x10confidence_score\x18\x03 \x01(\x01R\x0fconfidenceScore\x12(\n" +
	"\x10decision_time_ms\x18\x04 \x01(\x03R\x0edecisionTimeMs\x12\x1c\n" +
	"\treasoning\x18\x05 \x01(\tR\treasoning\x12K\n" +
	"\vnode_scores\x18\x06 \x03(\v2*.thesis.SchedulingDecision.NodeScoresEntryR\n" +
	"nodeScores\x1a=\n" +
	"\x0fNodeScoresEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"5\n" +
	"\x1aGetSchedulingStatusRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"\xc6\x03\n" +
	"\x1bGetSchedulingStatusResponse\x127\n" +
	"\rnode_statuses\x18\x01 \x03(\x0e2\x12.thesis.NodeStatusR\fnodeStatuses\x122\n" +
	"\x15total_tasks_scheduled\x18\x02 \x01(\x03R\x13totalTasksScheduled\x122\n" +
	"\x15total_tasks_completed\x18\x03 \x01(\x03R\x13totalTasksCompleted\x12,\n" +
	"\x12total_tasks_failed\x18\x04 \x01(\x03R\x10totalTasksFailed\x127\n" +
	"\x18average_response_time_ms\x18\x05 \x01(\x01R\x15averageResponseTimeMs\x12]\n" +
	"\x0esystem_metrics\x18\x06 \x03(\v26.thesis.GetSchedulingStatusResponse.SystemMetricsEntryR\rsystemMetrics\x1a@\n" +
	"\x12SystemMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x14\n" +
	"\x12HealthCheckRequest\"\x7f\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\"\x19\n" +
	"\x17GetSystemMetricsRequest\"\xc6\x03\n" +
	"\x18GetSystemMetricsResponse\x12%\n" +
	"\x0euptime_seconds\x18\x01 \x01(\x03R\ruptimeSeconds\x12*\n" +
	"\x11cpu_usage_percent\x18\x02 \x01(\x01R\x0fcpuUsagePercent\x12&\n" +
	"\x0fmemory_usage_mb\x18\x03 \x01(\x03R\rmemoryUsageMb\x12%\n" +
	"\x0etotal_requests\x18\x04 \x01(\x03R\rtotalRequests\x12/\n" +
	"\x13successful_requests\x18\x05 \x01(\x03R\x12successfulRequests\x12'\n" +
	"\x0ffailed_requests\x18\x06 \x01(\x03R\x0efailedRequests\x120\n" +
	"\x14success_rate_percent\x18\a \x01(\x01R\x12successRatePercent\x12/\n" +
	"\x14avg_response_time_ms\x18\b \x01(\x01R\x11avgResponseTimeMs\x12-\n" +
	"\x12active_connections\x18\t \x01(\x05R\x11activeConnections\x12\x1c\n" +
	"\ttimestamp\x18\n" +
	" \x01(\x03R\ttimestamp\"\x18\n" +
	"\x16GetNodeRegistryRequest\"\x88\x01\n" +
	"\x17GetNodeRegistryResponse\x12)\n" +
	"\x05nodes\x18\x01 \x03(\v2\x13.thesis.NodeSummaryR\x05nodes\x12\x1f\n" +
	"\vtotal_nodes\x18\x02 \x01(\x03R\n" +
	"totalNodes\x12!\n" +
	"\factive_nodes\x18\x03 \x01(\x03R\vactiveNodes\"\xc2\x01\n" +
	"\vNodeSummary\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12*\n" +
	"\x06status\x18\x02 \x01(\x0e2\x12.thesis.NodeStatusR\x06status\x12/\n" +
	"\x13utilization_percent\x18\x03 \x01(\x01R\x12utilizationPercent\x12%\n" +
	"\x0etasks_assigned\x18\x04 \x01(\x03R\rtasksAssigned\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\"\x1b\n" +
	"\x19GetSchedulingStatsRequest\"\xdf\x03\n" +
	"\x1aGetSchedulingStatsResponse\x12_\n" +
	"\x0falgorithm_usage\x18\x01 \x03(\v26.thesis.GetSchedulingStatsResponse.AlgorithmUsageEntryR\x0ealgorithmUsage\x12q\n" +
	"\x15algorithm_performance\x18\x02 \x03(\v2<.thesis.GetSchedulingStatsResponse.AlgorithmPerformanceEntryR\x14algorithmPerformance\x12-\n" +
	"\x12overall_efficiency\x18\x03 \x01(\x02R\x11overallEfficiency\x122\n" +
	"\x15total_tasks_processed\x18\x04 \x01(\x03R\x13totalTasksProcessed\x1aA\n" +
	"\x13AlgorithmUsageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aG\n" +
	"\x19AlgorithmPerformanceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\x15\n" +
	"\x13GetDashboardRequest\"\x89\x01\n" +
	"\x14GetDashboardResponse\x12,\n" +
	"\x06status\x18\x01 \x01(\v2\x14.thesis.SystemStatusR\x06status\x12+\n" +
	"\x11recent_activities\x18\x02 \x03(\tR\x10recentActivities\x12\x16\n" +
	"\x06alerts\x18\x03 \x03(\tR\x06alerts\"\xc1\x01\n" +
	"\fSystemStatus\x12#\n" +
	"\rserver_status\x18\x01 \x01(\tR\fserverStatus\x12%\n" +
	"\x0euptime_seconds\x18\x02 \x01(\x03R\ruptimeSeconds\x12!\n" +
	"\factive_nodes\x18\x03 \x01(\x03R\vactiveNodes\x12\x1f\n" +
	"\vtasks_today\x18\x04 \x01(\x03R\n" +
	"tasksToday\x12!\n" +
	"\fcurrent_load\x18\x05 \x01(\x01R\vcurrentLoad\"\xa9\x01\n" +
	"\x1dUpdateObjectiveWeightsRequest\x12L\n" +
	"\aweights\x18\x01 \x03(\v22.thesis.UpdateObjectiveWeightsRequest.WeightsEntryR\aweights\x1a:\n" +
	"\fWeightsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"T\n" +
	"\x1eUpdateObjectiveWeightsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xcb\x01\n" +
	"\x14TaskCompletionReport\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12+\n" +
	"\x05tasks\x18\x02 \x03(\v2\x15.thesis.CompletedTaskR\x05tasks\x12:\n" +
	"\ametrics\x18\x03 \x01(\v2 .thesis.SystemPerformanceMetricsR\ametrics\x121\n" +
	"\x14completion_timestamp\x18\x04 \x01(\x03R\x13completionTimestamp\"\xde\x03\n" +
	"\rCompletedTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12(\n" +
	"\x10assigned_node_id\x18\x02 \x01(\tR\x0eassignedNodeId\x127\n" +
	"\x18actual_execution_time_ms\x18\x03 \x01(\x01R\x15actualExecutionTimeMs\x12*\n" +
	"\x11actual_latency_ms\x18\x04 \x01(\x01R\x0factualLatencyMs\x12'\n" +
	"\x0fenergy_consumed\x18\x05 \x01(\x01R\x0eenergyConsumed\x12!\n" +
	"\fdeadline_met\x18\x06 \x01(\bR\vdeadlineMet\x12\x1d\n" +
	"\n" +
	"start_time\x18\a \x01(\x03R\tstartTime\x12'\n" +
	"\x0fcompletion_time\x18\b \x01(\x03R\x0ecompletionTime\x12O\n" +
	"\x0eresource_usage\x18\t \x03(\v2(.thesis.CompletedTask.ResourceUsageEntryR\rresourceUsage\x1a@\n" +
	"\x12ResourceUsageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xa3\x02\n" +
	"\x18SystemPerformanceMetrics\x12)\n" +
	"\x10total_throughput\x18\x01 \x01(\x01R\x0ftotalThroughput\x12,\n" +
	"\x12average_latency_ms\x18\x02 \x01(\x01R\x10averageLatencyMs\x12+\n" +
	"\x11energy_efficiency\x18\x03 \x01(\x01R\x10energyEfficiency\x121\n" +
	"\x14resource_utilization\x18\x04 \x01(\x01R\x13resourceUtilization\x12'\n" +
	"\x0fdeadline_misses\x18\x05 \x01(\x05R\x0edeadlineMisses\x12%\n" +
	"\x0efairness_index\x18\x06 \x01(\x01R\rfairnessIndex\"G\n" +
	"\x11TaskCompletionAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"B\n" +
	"\x15GetSortedQueueRequest\x12)\n" +
	"\x10include_metadata\x18\x01 \x01(\bR\x0fincludeMetadata\"\xcd\x02\n" +
	"\x16GetSortedQueueResponse\x12/\n" +
	"\fsorted_tasks\x18\x01 \x03(\v2\f.thesis.TaskR\vsortedTasks\x12%\n" +
	"\x0ealgorithm_used\x18\x02 \x01(\tR\ralgorithmUsed\x12\x1d\n" +
	"\n" +
	"queue_size\x18\x03 \x01(\x03R\tqueueSize\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x17\n" +
	"\anode_id\x18\x05 \x01(\tR\x06nodeId\x12H\n" +
	"\bmetadata\x18\x06 \x03(\v2,.thesis.GetSortedQueueResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"k\n" +
	"\x10SubscribeRequest\x12)\n" +
	"\x10include_metadata\x18\x01 \x01(\bR\x0fincludeMetadata\x12,\n" +
	"\x12update_interval_ms\x18\x02 \x01(\x05R\x10updateIntervalMs\"\x85\x03\n" +
	"\x13QueueUpdateResponse\x12/\n" +
	"\fsorted_tasks\x18\x01 \x03(\v2\f.thesis.TaskR\vsortedTasks\x12%\n" +
	"\x0ealgorithm_used\x18\x02 \x01(\tR\ralgorithmUsed\x12)\n" +
	"\x10confidence_score\x18\x03 \x01(\x01R\x0fconfidenceScore\x12)\n" +
	"\x10update_timestamp\x18\x04 \x01(\x03R\x0fupdateTimestamp\x12#\n" +
	"\rupdate_reason\x18\x05 \x01(\tR\fupdateReason\x12\x17\n" +
	"\anode_id\x18\x06 \x01(\tR\x06nodeId\x12E\n" +
	"\bmetadata\x18\a \x03(\v2).thesis.QueueUpdateResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*z\n" +
	"\bTaskType\x12\x19\n" +
	"\x15TASK_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TASK_TYPE_COMPUTE\x10\x01\x12\x10\n" +
	"\fTASK_TYPE_IO\x10\x02\x12\x15\n" +
	"\x11TASK_TYPE_NETWORK\x10\x03\x12\x13\n" +
	"\x0fTASK_TYPE_MIXED\x10\x04*\x94\x01\n" +
	"\n" +
	"NodeStatus\x12\x1b\n" +
	"\x17NODE_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12NODE_STATUS_ACTIVE\x10\x01\x12\x18\n" +
	"\x14NODE_STATUS_INACTIVE\x10\x02\x12\x1b\n" +
	"\x17NODE_STATUS_MAINTENANCE\x10\x03\x12\x1a\n" +
	"\x16NODE_STATUS_OVERLOADED\x10\x04*\xaa\x01\n" +
	"\x13SchedulingAlgorithm\x12$\n" +
	" SCHEDULING_ALGORITHM_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19SCHEDULING_ALGORITHM_FIFO\x10\x01\x12!\n" +
	"\x1dSCHEDULING_ALGORITHM_PRIORITY\x10\x02\x12+\n" +
	"'SCHEDULING_ALGORITHM_SHORTEST_JOB_FIRST\x10\x03*\xb1\x01\n" +
	"\x11ObjectiveFunction\x12\"\n" +
	"\x1eOBJECTIVE_FUNCTION_UNSPECIFIED\x10\x00\x12'\n" +
	"#OBJECTIVE_FUNCTION_MINIMIZE_LATENCY\x10\x01\x12*\n" +
	"&OBJECTIVE_FUNCTION_MAXIMIZE_THROUGHPUT\x10\x02\x12#\n" +
	"\x1fOBJECTIVE_FUNCTION_BALANCE_LOAD\x10\x03*\x8d\x01\n" +
	"\vCacheAction\x12\x1c\n" +
	"\x18CACHE_ACTION_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CACHE_ACTION_NONE\x10\x01\x12\x16\n" +
	"\x12CACHE_ACTION_STORE\x10\x02\x12\x14\n" +
	"\x10CACHE_ACTION_USE\x10\x03\x12\x1b\n" +
	"\x17CACHE_ACTION_INVALIDATE\x10\x042\xe7\x04\n" +
	"\rTaskScheduler\x12O\n" +
	"\x0eAddTaskToQueue\x12\x1d.thesis.AddTaskToQueueRequest\x1a\x1e.thesis.AddTaskToQueueResponse\x12^\n" +
	"\x13GetSchedulingStatus\x12\".thesis.GetSchedulingStatusRequest\x1a#.thesis.GetSchedulingStatusResponse\x12F\n" +
	"\vHealthCheck\x12\x1a.thesis.HealthCheckRequest\x1a\x1b.thesis.HealthCheckResponse\x12g\n" +
	"\x16UpdateObjectiveWeights\x12%.thesis.UpdateObjectiveWeightsRequest\x1a&.thesis.UpdateObjectiveWeightsResponse\x12O\n" +
	"\x14ReportTaskCompletion\x12\x1c.thesis.TaskCompletionReport\x1a\x19.thesis.TaskCompletionAck\x12O\n" +
	"\x0eGetSortedQueue\x12\x1d.thesis.GetSortedQueueRequest\x1a\x1e.thesis.GetSortedQueueResponse\x12R\n" +
	"\x17SubscribeToQueueUpdates\x12\x18.thesis.SubscribeRequest\x1a\x1b.thesis.QueueUpdateResponse0\x012\xe5\x02\n" +
	"\x10SystemMonitoring\x12U\n" +
	"\x10GetSystemMetrics\x12\x1f.thesis.GetSystemMetricsRequest\x1a .thesis.GetSystemMetricsResponse\x12R\n" +
	"\x0fGetNodeRegistry\x12\x1e.thesis.GetNodeRegistryRequest\x1a\x1f.thesis.GetNodeRegistryResponse\x12[\n" +
	"\x12GetSchedulingStats\x12!.thesis.GetSchedulingStatsRequest\x1a\".thesis.GetSchedulingStatsResponse\x12I\n" +
	"\fGetDashboard\x12\x1b.thesis.GetDashboardRequest\x1a\x1c.thesis.GetDashboardResponseB!Z\x1fscheduler-grpc-server/api/protob\x06proto3"

var (
	file_api_proto_scheduler_proto_rawDescOnce sync.Once
	file_api_proto_scheduler_proto_rawDescData []byte
)

func file_api_proto_scheduler_proto_rawDescGZIP() []byte {
	file_api_proto_scheduler_proto_rawDescOnce.Do(func() {
		file_api_proto_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_scheduler_proto_rawDesc), len(file_api_proto_scheduler_proto_rawDesc)))
	})
	return file_api_proto_scheduler_proto_rawDescData
}

var file_api_proto_scheduler_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_proto_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_api_proto_scheduler_proto_goTypes = []any{
	(TaskType)(0),                          // 0: thesis.TaskType
	(NodeStatus)(0),                        // 1: thesis.NodeStatus
	(SchedulingAlgorithm)(0),               // 2: thesis.SchedulingAlgorithm
	(ObjectiveFunction)(0),                 // 3: thesis.ObjectiveFunction
	(CacheAction)(0),                       // 4: thesis.CacheAction
	(*Task)(nil),                           // 5: thesis.Task
	(*FogNode)(nil),                        // 6: thesis.FogNode
	(*ResourceCapacity)(nil),               // 7: thesis.ResourceCapacity
	(*ResourceUsage)(nil),                  // 8: thesis.ResourceUsage
	(*Location)(nil),                       // 9: thesis.Location
	(*AddTaskToQueueRequest)(nil),          // 10: thesis.AddTaskToQueueRequest
	(*AddTaskToQueueResponse)(nil),         // 11: thesis.AddTaskToQueueResponse
	(*SchedulingPolicy)(nil),               // 12: thesis.SchedulingPolicy
	(*SchedulingDecision)(nil),             // 13: thesis.SchedulingDecision
	(*GetSchedulingStatusRequest)(nil),     // 14: thesis.GetSchedulingStatusRequest
	(*GetSchedulingStatusResponse)(nil),    // 15: thesis.GetSchedulingStatusResponse
	(*HealthCheckRequest)(nil),             // 16: thesis.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 17: thesis.HealthCheckResponse
	(*GetSystemMetricsRequest)(nil),        // 18: thesis.GetSystemMetricsRequest
	(*GetSystemMetricsResponse)(nil),       // 19: thesis.GetSystemMetricsResponse
	(*GetNodeRegistryRequest)(nil),         // 20: thesis.GetNodeRegistryRequest
	(*GetNodeRegistryResponse)(nil),        // 21: thesis.GetNodeRegistryResponse
	(*NodeSummary)(nil),                    // 22: thesis.NodeSummary
	(*GetSchedulingStatsRequest)(nil),      // 23: thesis.GetSchedulingStatsRequest
	(*GetSchedulingStatsResponse)(nil),     // 24: thesis.GetSchedulingStatsResponse
	(*GetDashboardRequest)(nil),            // 25: thesis.GetDashboardRequest
	(*GetDashboardResponse)(nil),           // 26: thesis.GetDashboardResponse
	(*SystemStatus)(nil),                   // 27: thesis.SystemStatus
	(*UpdateObjectiveWeightsRequest)(nil),  // 28: thesis.UpdateObjectiveWeightsRequest
	(*UpdateObjectiveWeightsResponse)(nil), // 29: thesis.UpdateObjectiveWeightsResponse
	(*TaskCompletionReport)(nil),           // 30: thesis.TaskCompletionReport
	(*CompletedTask)(nil),                  // 31: thesis.CompletedTask
	(*SystemPerformanceMetrics)(nil),       // 32: thesis.SystemPerformanceMetrics
	(*TaskCompletionAck)(nil),              // 33: thesis.TaskCompletionAck
	(*GetSortedQueueRequest)(nil),          // 34: thesis.GetSortedQueueRequest
	(*GetSortedQueueResponse)(nil),         // 35: thesis.GetSortedQueueResponse
	(*SubscribeRequest)(nil),               // 36: thesis.SubscribeRequest
	(*QueueUpdateResponse)(nil),            // 37: thesis.QueueUpdateResponse
	nil,                                    // 38: thesis.Task.MetadataEntry
	nil,                                    // 39: thesis.FogNode.MetadataEntry
	nil,                                    // 40: thesis.SchedulingPolicy.ParametersEntry
	nil,                                    // 41: thesis.SchedulingDecision.NodeScoresEntry
	nil,                                    // 42: thesis.GetSchedulingStatusResponse.SystemMetricsEntry
	nil,                                    // 43: thesis.GetSchedulingStatsResponse.AlgorithmUsageEntry
	nil,                                    // 44: thesis.GetSchedulingStatsResponse.AlgorithmPerformanceEntry
	nil,                                    // 45: thesis.UpdateObjectiveWeightsRequest.WeightsEntry
	nil,                                    // 46: thesis.CompletedTask.ResourceUsageEntry
	nil,                                    // 47: thesis.GetSortedQueueResponse.MetadataEntry
	nil,                                    // 48: thesis.QueueUpdateResponse.MetadataEntry
}
var file_api_proto_scheduler_proto_depIdxs = []int32{
	0,  // 0: thesis.Task.task_type:type_name -> thesis.TaskType
	38, // 1: thesis.Task.metadata:type_name -> thesis.Task.MetadataEntry
	1,  // 2: thesis.FogNode.status:type_name -> thesis.NodeStatus
	7,  // 3: thesis.FogNode.capacity:type_name -> thesis.ResourceCapacity
	8,  // 4: thesis.FogNode.current_usage:type_name -> thesis.ResourceUsage
	9,  // 5: thesis.FogNode.location:type_name -> thesis.Location
	39, // 6: thesis.FogNode.metadata:type_name -> thesis.FogNode.MetadataEntry
	5,  // 7: thesis.AddTaskToQueueRequest.task:type_name -> thesis.Task
	12, // 8: thesis.AddTaskToQueueRequest.policy:type_name -> thesis.SchedulingPolicy
	2,  // 9: thesis.SchedulingPolicy.algorithm:type_name -> thesis.SchedulingAlgorithm
	3,  // 10: thesis.SchedulingPolicy.objective:type_name -> thesis.ObjectiveFunction
	40, // 11: thesis.SchedulingPolicy.parameters:type_name -> thesis.SchedulingPolicy.ParametersEntry
	2,  // 12: thesis.SchedulingDecision.algorithm_used:type_name -> thesis.SchedulingAlgorithm
	3,  // 13: thesis.SchedulingDecision.objective_used:type_name -> thesis.ObjectiveFunction
	41, // 14: thesis.SchedulingDecision.node_scores:type_name -> thesis.SchedulingDecision.NodeScoresEntry
	1,  // 15: thesis.GetSchedulingStatusResponse.node_statuses:type_name -> thesis.NodeStatus
	42, // 16: thesis.GetSchedulingStatusResponse.system_metrics:type_name -> thesis.GetSchedulingStatusResponse.SystemMetricsEntry
	22, // 17: thesis.GetNodeRegistryResponse.nodes:type_name -> thesis.NodeSummary
	1,  // 18: thesis.NodeSummary.status:type_name -> thesis.NodeStatus
	43, // 19: thesis.GetSchedulingStatsResponse.algorithm_usage:type_name -> thesis.GetSchedulingStatsResponse.AlgorithmUsageEntry
	44, // 20: thesis.GetSchedulingStatsResponse.algorithm_performance:type_name -> thesis.GetSchedulingStatsResponse.AlgorithmPerformanceEntry
	27, // 21: thesis.GetDashboardResponse.status:type_name -> thesis.SystemStatus
	45, // 22: thesis.UpdateObjectiveWeightsRequest.weights:type_name -> thesis.UpdateObjectiveWeightsRequest.WeightsEntry
	31, // 23: thesis.TaskCompletionReport.tasks:type_name -> thesis.CompletedTask
	32, // 24: thesis.TaskCompletionReport.metrics:type_name -> thesis.SystemPerformanceMetrics
	46, // 25: thesis.CompletedTask.resource_usage:type_name -> thesis.CompletedTask.ResourceUsageEntry
	5,  // 26: thesis.GetSortedQueueResponse.sorted_tasks:type_name -> thesis.Task
	47, // 27: thesis.GetSortedQueueResponse.metadata:type_name -> thesis.GetSortedQueueResponse.MetadataEntry
	5,  // 28: thesis.QueueUpdateResponse.sorted_tasks:type_name -> thesis.Task
	48, // 29: thesis.QueueUpdateResponse.metadata:type_name -> thesis.QueueUpdateResponse.MetadataEntry
	10, // 30: thesis.TaskScheduler.AddTaskToQueue:input_type -> thesis.AddTaskToQueueRequest
	14, // 31: thesis.TaskScheduler.GetSchedulingStatus:input_type -> thesis.GetSchedulingStatusRequest
	16, // 32: thesis.TaskScheduler.HealthCheck:input_type -> thesis.HealthCheckRequest
	28, // 33: thesis.TaskScheduler.UpdateObjectiveWeights:input_type -> thesis.UpdateObjectiveWeightsRequest
	30, // 34: thesis.TaskScheduler.ReportTaskCompletion:input_type -> thesis.TaskCompletionReport
	34, // 35: thesis.TaskScheduler.GetSortedQueue:input_type -> thesis.GetSortedQueueRequest
	36, // 36: thesis.TaskScheduler.SubscribeToQueueUpdates:input_type -> thesis.SubscribeRequest
	18, // 37: thesis.SystemMonitoring.GetSystemMetrics:input_type -> thesis.GetSystemMetricsRequest
	20, // 38: thesis.SystemMonitoring.GetNodeRegistry:input_type -> thesis.GetNodeRegistryRequest
	23, // 39: thesis.SystemMonitoring.GetSchedulingStats:input_type -> thesis.GetSchedulingStatsRequest
	25, // 40: thesis.SystemMonitoring.GetDashboard:input_type -> thesis.GetDashboardRequest
	11, // 41: thesis.TaskScheduler.AddTaskToQueue:output_type -> thesis.AddTaskToQueueResponse
	15, // 42: thesis.TaskScheduler.GetSchedulingStatus:output_type -> thesis.GetSchedulingStatusResponse
	17, // 43: thesis.TaskScheduler.HealthCheck:output_type -> thesis.HealthCheckResponse
	29, // 44: thesis.TaskScheduler.UpdateObjectiveWeights:output_type -> thesis.UpdateObjectiveWeightsResponse
	33, // 45: thesis.TaskScheduler.ReportTaskCompletion:output_type -> thesis.TaskCompletionAck
	35, // 46: thesis.TaskScheduler.GetSortedQueue:output_type -> thesis.GetSortedQueueResponse
	37, // 47: thesis.TaskScheduler.SubscribeToQueueUpdates:output_type -> thesis.QueueUpdateResponse
	19, // 48: thesis.SystemMonitoring.GetSystemMetrics:output_type -> thesis.GetSystemMetricsResponse
	21, // 49: thesis.SystemMonitoring.GetNodeRegistry:output_type -> thesis.GetNodeRegistryResponse
	24, // 50: thesis.SystemMonitoring.GetSchedulingStats:output_type -> thesis.GetSchedulingStatsResponse
	26, // 51: thesis.SystemMonitoring.GetDashboard:output_type -> thesis.GetDashboardResponse
	41, // [41:52] is the sub-list for method output_type
	30, // [30:41] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_proto_scheduler_proto_init() }
func file_api_proto_scheduler_proto_init() {
	if File_api_proto_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_scheduler_proto_rawDesc), len(file_api_proto_scheduler_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_proto_scheduler_proto_goTypes,
		DependencyIndexes: file_api_proto_scheduler_proto_depIdxs,
		EnumInfos:         file_api_proto_scheduler_proto_enumTypes,
		MessageInfos:      file_api_proto_scheduler_proto_msgTypes,
	}.Build()
	File_api_proto_scheduler_proto = out.File
	file_api_proto_scheduler_proto_goTypes = nil
	file_api_proto_scheduler_proto_depIdxs = nil
}
