// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: api/proto/service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Performance metrics request
type RLPerformanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RLPerformanceRequest) Reset() {
	*x = RLPerformanceRequest{}
	mi := &file_api_proto_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLPerformanceRequest) ProtoMessage() {}

func (x *RLPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLPerformanceRequest.ProtoReflect.Descriptor instead.
func (*RLPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{0}
}

// Performance metrics response
type RLPerformanceResponse struct {
	state             protoimpl.MessageState                            `protogen:"open.v1"`
	TotalDecisions    int64                                             `protobuf:"varint,1,opt,name=total_decisions,json=totalDecisions,proto3" json:"total_decisions,omitempty"`
	SuccessfulTasks   int64                                             `protobuf:"varint,2,opt,name=successful_tasks,json=successfulTasks,proto3" json:"successful_tasks,omitempty"`
	FailedTasks       int64                                             `protobuf:"varint,3,opt,name=failed_tasks,json=failedTasks,proto3" json:"failed_tasks,omitempty"`
	SuccessRate       float64                                           `protobuf:"fixed64,4,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	AvgRecentReward   float64                                           `protobuf:"fixed64,5,opt,name=avg_recent_reward,json=avgRecentReward,proto3" json:"avg_recent_reward,omitempty"`
	CumulativeReward  float64                                           `protobuf:"fixed64,6,opt,name=cumulative_reward,json=cumulativeReward,proto3" json:"cumulative_reward,omitempty"`
	AvgDecisionTimeNs int64                                             `protobuf:"varint,7,opt,name=avg_decision_time_ns,json=avgDecisionTimeNs,proto3" json:"avg_decision_time_ns,omitempty"`
	AlgorithmMetrics  map[string]*RLPerformanceResponse_AlgorithmMetric `protobuf:"bytes,8,rep,name=algorithm_metrics,json=algorithmMetrics,proto3" json:"algorithm_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HybridMetrics     *RLPerformanceResponse_HybridMetric               `protobuf:"bytes,9,opt,name=hybrid_metrics,json=hybridMetrics,proto3" json:"hybrid_metrics,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RLPerformanceResponse) Reset() {
	*x = RLPerformanceResponse{}
	mi := &file_api_proto_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLPerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLPerformanceResponse) ProtoMessage() {}

func (x *RLPerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLPerformanceResponse.ProtoReflect.Descriptor instead.
func (*RLPerformanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{1}
}

func (x *RLPerformanceResponse) GetTotalDecisions() int64 {
	if x != nil {
		return x.TotalDecisions
	}
	return 0
}

func (x *RLPerformanceResponse) GetSuccessfulTasks() int64 {
	if x != nil {
		return x.SuccessfulTasks
	}
	return 0
}

func (x *RLPerformanceResponse) GetFailedTasks() int64 {
	if x != nil {
		return x.FailedTasks
	}
	return 0
}

func (x *RLPerformanceResponse) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *RLPerformanceResponse) GetAvgRecentReward() float64 {
	if x != nil {
		return x.AvgRecentReward
	}
	return 0
}

func (x *RLPerformanceResponse) GetCumulativeReward() float64 {
	if x != nil {
		return x.CumulativeReward
	}
	return 0
}

func (x *RLPerformanceResponse) GetAvgDecisionTimeNs() int64 {
	if x != nil {
		return x.AvgDecisionTimeNs
	}
	return 0
}

func (x *RLPerformanceResponse) GetAlgorithmMetrics() map[string]*RLPerformanceResponse_AlgorithmMetric {
	if x != nil {
		return x.AlgorithmMetrics
	}
	return nil
}

func (x *RLPerformanceResponse) GetHybridMetrics() *RLPerformanceResponse_HybridMetric {
	if x != nil {
		return x.HybridMetrics
	}
	return nil
}

// Set parameters request
type RLParametersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AlgorithmName string                 `protobuf:"bytes,1,opt,name=algorithm_name,json=algorithmName,proto3" json:"algorithm_name,omitempty"`
	Parameters    map[string]float64     `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RLParametersRequest) Reset() {
	*x = RLParametersRequest{}
	mi := &file_api_proto_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLParametersRequest) ProtoMessage() {}

func (x *RLParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLParametersRequest.ProtoReflect.Descriptor instead.
func (*RLParametersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{2}
}

func (x *RLParametersRequest) GetAlgorithmName() string {
	if x != nil {
		return x.AlgorithmName
	}
	return ""
}

func (x *RLParametersRequest) GetParameters() map[string]float64 {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Set parameters response
type RLParametersResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CurrentParameters map[string]float64     `protobuf:"bytes,3,rep,name=current_parameters,json=currentParameters,proto3" json:"current_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RLParametersResponse) Reset() {
	*x = RLParametersResponse{}
	mi := &file_api_proto_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLParametersResponse) ProtoMessage() {}

func (x *RLParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLParametersResponse.ProtoReflect.Descriptor instead.
func (*RLParametersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{3}
}

func (x *RLParametersResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RLParametersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RLParametersResponse) GetCurrentParameters() map[string]float64 {
	if x != nil {
		return x.CurrentParameters
	}
	return nil
}

// Add these message definitions at the end of the file
type RLAgentControlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        string                 `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`                                                                                                           // "enable_learning", "disable_learning", "switch_algorithm" // search CONTROL_RL_ACTIONS
	AlgorithmName string                 `protobuf:"bytes,2,opt,name=algorithm_name,json=algorithmName,proto3" json:"algorithm_name,omitempty"`                                                                        // Used when action is "switch_algorithm"
	TaskMetadata  map[string]string      `protobuf:"bytes,3,rep,name=task_metadata,json=taskMetadata,proto3" json:"task_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RLAgentControlRequest) Reset() {
	*x = RLAgentControlRequest{}
	mi := &file_api_proto_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLAgentControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLAgentControlRequest) ProtoMessage() {}

func (x *RLAgentControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLAgentControlRequest.ProtoReflect.Descriptor instead.
func (*RLAgentControlRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{4}
}

func (x *RLAgentControlRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RLAgentControlRequest) GetAlgorithmName() string {
	if x != nil {
		return x.AlgorithmName
	}
	return ""
}

func (x *RLAgentControlRequest) GetTaskMetadata() map[string]string {
	if x != nil {
		return x.TaskMetadata
	}
	return nil
}

type RLAgentControlResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message          string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CurrentAlgorithm string                 `protobuf:"bytes,3,opt,name=current_algorithm,json=currentAlgorithm,proto3" json:"current_algorithm,omitempty"`
	LearningEnabled  bool                   `protobuf:"varint,4,opt,name=learning_enabled,json=learningEnabled,proto3" json:"learning_enabled,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RLAgentControlResponse) Reset() {
	*x = RLAgentControlResponse{}
	mi := &file_api_proto_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLAgentControlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLAgentControlResponse) ProtoMessage() {}

func (x *RLAgentControlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLAgentControlResponse.ProtoReflect.Descriptor instead.
func (*RLAgentControlResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{5}
}

func (x *RLAgentControlResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RLAgentControlResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RLAgentControlResponse) GetCurrentAlgorithm() string {
	if x != nil {
		return x.CurrentAlgorithm
	}
	return ""
}

func (x *RLAgentControlResponse) GetLearningEnabled() bool {
	if x != nil {
		return x.LearningEnabled
	}
	return false
}

type RLAgentStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RLAgentStatusRequest) Reset() {
	*x = RLAgentStatusRequest{}
	mi := &file_api_proto_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLAgentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLAgentStatusRequest) ProtoMessage() {}

func (x *RLAgentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLAgentStatusRequest.ProtoReflect.Descriptor instead.
func (*RLAgentStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{6}
}

type RLAgentStatusResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ActiveAlgorithm     string                 `protobuf:"bytes,1,opt,name=active_algorithm,json=activeAlgorithm,proto3" json:"active_algorithm,omitempty"`
	LearningEnabled     bool                   `protobuf:"varint,2,opt,name=learning_enabled,json=learningEnabled,proto3" json:"learning_enabled,omitempty"`
	AvailableAlgorithms []string               `protobuf:"bytes,3,rep,name=available_algorithms,json=availableAlgorithms,proto3" json:"available_algorithms,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RLAgentStatusResponse) Reset() {
	*x = RLAgentStatusResponse{}
	mi := &file_api_proto_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLAgentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLAgentStatusResponse) ProtoMessage() {}

func (x *RLAgentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLAgentStatusResponse.ProtoReflect.Descriptor instead.
func (*RLAgentStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{7}
}

func (x *RLAgentStatusResponse) GetActiveAlgorithm() string {
	if x != nil {
		return x.ActiveAlgorithm
	}
	return ""
}

func (x *RLAgentStatusResponse) GetLearningEnabled() bool {
	if x != nil {
		return x.LearningEnabled
	}
	return false
}

func (x *RLAgentStatusResponse) GetAvailableAlgorithms() []string {
	if x != nil {
		return x.AvailableAlgorithms
	}
	return nil
}

// Node state reporting
type NodeStateRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CpuUtilization    float64                `protobuf:"fixed64,2,opt,name=cpu_utilization,json=cpuUtilization,proto3" json:"cpu_utilization,omitempty"`
	MemoryUtilization float64                `protobuf:"fixed64,3,opt,name=memory_utilization,json=memoryUtilization,proto3" json:"memory_utilization,omitempty"`
	NetworkBandwidth  float64                `protobuf:"fixed64,4,opt,name=network_bandwidth,json=networkBandwidth,proto3" json:"network_bandwidth,omitempty"`
	TaskCount         int32                  `protobuf:"varint,5,opt,name=task_count,json=taskCount,proto3" json:"task_count,omitempty"`
	CustomMetrics     map[string]float64     `protobuf:"bytes,6,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeStateRequest) Reset() {
	*x = NodeStateRequest{}
	mi := &file_api_proto_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStateRequest) ProtoMessage() {}

func (x *NodeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStateRequest.ProtoReflect.Descriptor instead.
func (*NodeStateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{8}
}

func (x *NodeStateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeStateRequest) GetCpuUtilization() float64 {
	if x != nil {
		return x.CpuUtilization
	}
	return 0
}

func (x *NodeStateRequest) GetMemoryUtilization() float64 {
	if x != nil {
		return x.MemoryUtilization
	}
	return 0
}

func (x *NodeStateRequest) GetNetworkBandwidth() float64 {
	if x != nil {
		return x.NetworkBandwidth
	}
	return 0
}

func (x *NodeStateRequest) GetTaskCount() int32 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

func (x *NodeStateRequest) GetCustomMetrics() map[string]float64 {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

type NodeStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acknowledged  bool                   `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStateResponse) Reset() {
	*x = NodeStateResponse{}
	mi := &file_api_proto_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStateResponse) ProtoMessage() {}

func (x *NodeStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStateResponse.ProtoReflect.Descriptor instead.
func (*NodeStateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{9}
}

func (x *NodeStateResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *NodeStateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Task allocation
type TaskAllocationRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TaskId               string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	CpuRequirement       float64                `protobuf:"fixed64,2,opt,name=cpu_requirement,json=cpuRequirement,proto3" json:"cpu_requirement,omitempty"`
	MemoryRequirement    float64                `protobuf:"fixed64,3,opt,name=memory_requirement,json=memoryRequirement,proto3" json:"memory_requirement,omitempty"`
	BandwidthRequirement float64                `protobuf:"fixed64,4,opt,name=bandwidth_requirement,json=bandwidthRequirement,proto3" json:"bandwidth_requirement,omitempty"`
	Priority             int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	DeadlineMs           int64                  `protobuf:"varint,6,opt,name=deadline_ms,json=deadlineMs,proto3" json:"deadline_ms,omitempty"`
	TaskMetadata         map[string]string      `protobuf:"bytes,7,rep,name=task_metadata,json=taskMetadata,proto3" json:"task_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TaskAllocationRequest) Reset() {
	*x = TaskAllocationRequest{}
	mi := &file_api_proto_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAllocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAllocationRequest) ProtoMessage() {}

func (x *TaskAllocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAllocationRequest.ProtoReflect.Descriptor instead.
func (*TaskAllocationRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{10}
}

func (x *TaskAllocationRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAllocationRequest) GetCpuRequirement() float64 {
	if x != nil {
		return x.CpuRequirement
	}
	return 0
}

func (x *TaskAllocationRequest) GetMemoryRequirement() float64 {
	if x != nil {
		return x.MemoryRequirement
	}
	return 0
}

func (x *TaskAllocationRequest) GetBandwidthRequirement() float64 {
	if x != nil {
		return x.BandwidthRequirement
	}
	return 0
}

func (x *TaskAllocationRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TaskAllocationRequest) GetDeadlineMs() int64 {
	if x != nil {
		return x.DeadlineMs
	}
	return 0
}

func (x *TaskAllocationRequest) GetTaskMetadata() map[string]string {
	if x != nil {
		return x.TaskMetadata
	}
	return nil
}

type TaskAllocationResponse struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	TaskId                   string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AllocatedNodeId          string                 `protobuf:"bytes,2,opt,name=allocated_node_id,json=allocatedNodeId,proto3" json:"allocated_node_id,omitempty"`
	Success                  bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message                  string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	ExpectedCompletionTimeMs int64                  `protobuf:"varint,5,opt,name=expected_completion_time_ms,json=expectedCompletionTimeMs,proto3" json:"expected_completion_time_ms,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TaskAllocationResponse) Reset() {
	*x = TaskAllocationResponse{}
	mi := &file_api_proto_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAllocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAllocationResponse) ProtoMessage() {}

func (x *TaskAllocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAllocationResponse.ProtoReflect.Descriptor instead.
func (*TaskAllocationResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{11}
}

func (x *TaskAllocationResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAllocationResponse) GetAllocatedNodeId() string {
	if x != nil {
		return x.AllocatedNodeId
	}
	return ""
}

func (x *TaskAllocationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskAllocationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskAllocationResponse) GetExpectedCompletionTimeMs() int64 {
	if x != nil {
		return x.ExpectedCompletionTimeMs
	}
	return 0
}

// Task outcome reporting
type TaskOutcomeRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TaskId                string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	NodeId                string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CompletedSuccessfully bool                   `protobuf:"varint,3,opt,name=completed_successfully,json=completedSuccessfully,proto3" json:"completed_successfully,omitempty"`
	ActualExecutionTimeMs int64                  `protobuf:"varint,4,opt,name=actual_execution_time_ms,json=actualExecutionTimeMs,proto3" json:"actual_execution_time_ms,omitempty"`
	ActualCpuUsage        float64                `protobuf:"fixed64,5,opt,name=actual_cpu_usage,json=actualCpuUsage,proto3" json:"actual_cpu_usage,omitempty"`
	ActualMemoryUsage     float64                `protobuf:"fixed64,6,opt,name=actual_memory_usage,json=actualMemoryUsage,proto3" json:"actual_memory_usage,omitempty"`
	ErrorMessage          string                 `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TaskOutcomeRequest) Reset() {
	*x = TaskOutcomeRequest{}
	mi := &file_api_proto_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskOutcomeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskOutcomeRequest) ProtoMessage() {}

func (x *TaskOutcomeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskOutcomeRequest.ProtoReflect.Descriptor instead.
func (*TaskOutcomeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{12}
}

func (x *TaskOutcomeRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskOutcomeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TaskOutcomeRequest) GetCompletedSuccessfully() bool {
	if x != nil {
		return x.CompletedSuccessfully
	}
	return false
}

func (x *TaskOutcomeRequest) GetActualExecutionTimeMs() int64 {
	if x != nil {
		return x.ActualExecutionTimeMs
	}
	return 0
}

func (x *TaskOutcomeRequest) GetActualCpuUsage() float64 {
	if x != nil {
		return x.ActualCpuUsage
	}
	return 0
}

func (x *TaskOutcomeRequest) GetActualMemoryUsage() float64 {
	if x != nil {
		return x.ActualMemoryUsage
	}
	return 0
}

func (x *TaskOutcomeRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type TaskOutcomeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acknowledged  bool                   `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskOutcomeResponse) Reset() {
	*x = TaskOutcomeResponse{}
	mi := &file_api_proto_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskOutcomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskOutcomeResponse) ProtoMessage() {}

func (x *TaskOutcomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskOutcomeResponse.ProtoReflect.Descriptor instead.
func (*TaskOutcomeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{13}
}

func (x *TaskOutcomeResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *TaskOutcomeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// System state query
type SystemStateRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	IncludeDetailedMetrics bool                   `protobuf:"varint,1,opt,name=include_detailed_metrics,json=includeDetailedMetrics,proto3" json:"include_detailed_metrics,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SystemStateRequest) Reset() {
	*x = SystemStateRequest{}
	mi := &file_api_proto_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStateRequest) ProtoMessage() {}

func (x *SystemStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStateRequest.ProtoReflect.Descriptor instead.
func (*SystemStateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{14}
}

func (x *SystemStateRequest) GetIncludeDetailedMetrics() bool {
	if x != nil {
		return x.IncludeDetailedMetrics
	}
	return false
}

type SystemStateResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FogNodes          map[string]*NodeState  `protobuf:"bytes,1,rep,name=fog_nodes,json=fogNodes,proto3" json:"fog_nodes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TotalTasksRunning int32                  `protobuf:"varint,2,opt,name=total_tasks_running,json=totalTasksRunning,proto3" json:"total_tasks_running,omitempty"`
	TotalTasksQueued  int32                  `protobuf:"varint,3,opt,name=total_tasks_queued,json=totalTasksQueued,proto3" json:"total_tasks_queued,omitempty"`
	SystemHealthScore float64                `protobuf:"fixed64,4,opt,name=system_health_score,json=systemHealthScore,proto3" json:"system_health_score,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SystemStateResponse) Reset() {
	*x = SystemStateResponse{}
	mi := &file_api_proto_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStateResponse) ProtoMessage() {}

func (x *SystemStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStateResponse.ProtoReflect.Descriptor instead.
func (*SystemStateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{15}
}

func (x *SystemStateResponse) GetFogNodes() map[string]*NodeState {
	if x != nil {
		return x.FogNodes
	}
	return nil
}

func (x *SystemStateResponse) GetTotalTasksRunning() int32 {
	if x != nil {
		return x.TotalTasksRunning
	}
	return 0
}

func (x *SystemStateResponse) GetTotalTasksQueued() int32 {
	if x != nil {
		return x.TotalTasksQueued
	}
	return 0
}

func (x *SystemStateResponse) GetSystemHealthScore() float64 {
	if x != nil {
		return x.SystemHealthScore
	}
	return 0
}

type NodeState struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CpuUtilization    float64                `protobuf:"fixed64,2,opt,name=cpu_utilization,json=cpuUtilization,proto3" json:"cpu_utilization,omitempty"`
	MemoryUtilization float64                `protobuf:"fixed64,3,opt,name=memory_utilization,json=memoryUtilization,proto3" json:"memory_utilization,omitempty"`
	NetworkBandwidth  float64                `protobuf:"fixed64,4,opt,name=network_bandwidth,json=networkBandwidth,proto3" json:"network_bandwidth,omitempty"`
	TaskCount         int32                  `protobuf:"varint,5,opt,name=task_count,json=taskCount,proto3" json:"task_count,omitempty"`
	IsAvailable       bool                   `protobuf:"varint,6,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	CustomMetrics     map[string]float64     `protobuf:"bytes,7,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeState) Reset() {
	*x = NodeState{}
	mi := &file_api_proto_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeState) ProtoMessage() {}

func (x *NodeState) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeState.ProtoReflect.Descriptor instead.
func (*NodeState) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{16}
}

func (x *NodeState) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeState) GetCpuUtilization() float64 {
	if x != nil {
		return x.CpuUtilization
	}
	return 0
}

func (x *NodeState) GetMemoryUtilization() float64 {
	if x != nil {
		return x.MemoryUtilization
	}
	return 0
}

func (x *NodeState) GetNetworkBandwidth() float64 {
	if x != nil {
		return x.NetworkBandwidth
	}
	return 0
}

func (x *NodeState) GetTaskCount() int32 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

func (x *NodeState) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *NodeState) GetCustomMetrics() map[string]float64 {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

// Per-algorithm metrics
type RLPerformanceResponse_AlgorithmMetric struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Decisions         int64                  `protobuf:"varint,1,opt,name=decisions,proto3" json:"decisions,omitempty"`
	SuccessRate       float64                `protobuf:"fixed64,2,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	AvgReward         float64                `protobuf:"fixed64,3,opt,name=avg_reward,json=avgReward,proto3" json:"avg_reward,omitempty"`
	LastUpdatedUnixMs int64                  `protobuf:"varint,4,opt,name=last_updated_unix_ms,json=lastUpdatedUnixMs,proto3" json:"last_updated_unix_ms,omitempty"` // Unix timestamp in milliseconds
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RLPerformanceResponse_AlgorithmMetric) Reset() {
	*x = RLPerformanceResponse_AlgorithmMetric{}
	mi := &file_api_proto_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLPerformanceResponse_AlgorithmMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLPerformanceResponse_AlgorithmMetric) ProtoMessage() {}

func (x *RLPerformanceResponse_AlgorithmMetric) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLPerformanceResponse_AlgorithmMetric.ProtoReflect.Descriptor instead.
func (*RLPerformanceResponse_AlgorithmMetric) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *RLPerformanceResponse_AlgorithmMetric) GetDecisions() int64 {
	if x != nil {
		return x.Decisions
	}
	return 0
}

func (x *RLPerformanceResponse_AlgorithmMetric) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *RLPerformanceResponse_AlgorithmMetric) GetAvgReward() float64 {
	if x != nil {
		return x.AvgReward
	}
	return 0
}

func (x *RLPerformanceResponse_AlgorithmMetric) GetLastUpdatedUnixMs() int64 {
	if x != nil {
		return x.LastUpdatedUnixMs
	}
	return 0
}

type RLPerformanceResponse_HybridMetric struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TransitionProgress float64                `protobuf:"fixed64,1,opt,name=transition_progress,json=transitionProgress,proto3" json:"transition_progress,omitempty"` // Progress from heuristic to RL (0-1)
	ConfidenceAvg      float64                `protobuf:"fixed64,2,opt,name=confidence_avg,json=confidenceAvg,proto3" json:"confidence_avg,omitempty"`                // Average confidence in decisions
	HeuristicUsage     float64                `protobuf:"fixed64,3,opt,name=heuristic_usage,json=heuristicUsage,proto3" json:"heuristic_usage,omitempty"`             // Percentage of decisions using heuristics
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RLPerformanceResponse_HybridMetric) Reset() {
	*x = RLPerformanceResponse_HybridMetric{}
	mi := &file_api_proto_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RLPerformanceResponse_HybridMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLPerformanceResponse_HybridMetric) ProtoMessage() {}

func (x *RLPerformanceResponse_HybridMetric) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLPerformanceResponse_HybridMetric.ProtoReflect.Descriptor instead.
func (*RLPerformanceResponse_HybridMetric) Descriptor() ([]byte, []int) {
	return file_api_proto_service_proto_rawDescGZIP(), []int{1, 2}
}

func (x *RLPerformanceResponse_HybridMetric) GetTransitionProgress() float64 {
	if x != nil {
		return x.TransitionProgress
	}
	return 0
}

func (x *RLPerformanceResponse_HybridMetric) GetConfidenceAvg() float64 {
	if x != nil {
		return x.ConfidenceAvg
	}
	return 0
}

func (x *RLPerformanceResponse_HybridMetric) GetHeuristicUsage() float64 {
	if x != nil {
		return x.HeuristicUsage
	}
	return 0
}

var File_api_proto_service_proto protoreflect.FileDescriptor

const file_api_proto_service_proto_rawDesc = "" +
	"\n" +
	"\x17api/proto/service.proto\x12\x06thesis\"\x16\n" +
	"\x14RLPerformanceRequest\"\x9b\a\n" +
	"\x15RLPerformanceResponse\x12'\n" +
	"\x0ftotal_decisions\x18\x01 \x01(\x03R\x0etotalDecisions\x12)\n" +
	"\x10successful_tasks\x18\x02 \x01(\x03R\x0fsuccessfulTasks\x12!\n" +
	"\ffailed_tasks\x18\x03 \x01(\x03R\vfailedTasks\x12!\n" +
	"\fsuccess_rate\x18\x04 \x01(\x01R\vsuccessRate\x12*\n" +
	"\x11avg_recent_reward\x18\x05 \x01(\x01R\x0favgRecentReward\x12+\n" +
	"\x11cumulative_reward\x18\x06 \x01(\x01R\x10cumulativeReward\x12/\n" +
	"\x14avg_decision_time_ns\x18\a \x01(\x03R\x11avgDecisionTimeNs\x12`\n" +
	"\x11algorithm_metrics\x18\b \x03(\v23.thesis.RLPerformanceResponse.AlgorithmMetricsEntryR\x10algorithmMetrics\x12Q\n" +
	"\x0ehybrid_metrics\x18\t \x01(\v2*.thesis.RLPerformanceResponse.HybridMetricR\rhybridMetrics\x1a\xa2\x01\n" +
	"\x0fAlgorithmMetric\x12\x1c\n" +
	"\tdecisions\x18\x01 \x01(\x03R\tdecisions\x12!\n" +
	"\fsuccess_rate\x18\x02 \x01(\x01R\vsuccessRate\x12\x1d\n" +
	"\n" +
	"avg_reward\x18\x03 \x01(\x01R\tavgReward\x12/\n" +
	"\x14last_updated_unix_ms\x18\x04 \x01(\x03R\x11lastUpdatedUnixMs\x1ar\n" +
	"\x15AlgorithmMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12C\n" +
	"\x05value\x18\x02 \x01(\v2-.thesis.RLPerformanceResponse.AlgorithmMetricR\x05value:\x028\x01\x1a\x8f\x01\n" +
	"\fHybridMetric\x12/\n" +
	"\x13transition_progress\x18\x01 \x01(\x01R\x12transitionProgress\x12%\n" +
	"\x0econfidence_avg\x18\x02 \x01(\x01R\rconfidenceAvg\x12'\n" +
	"\x0fheuristic_usage\x18\x03 \x01(\x01R\x0eheuristicUsage\"\xc8\x01\n" +
	"\x13RLParametersRequest\x12%\n" +
	"\x0ealgorithm_name\x18\x01 \x01(\tR\ralgorithmName\x12K\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2+.thesis.RLParametersRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xf4\x01\n" +
	"\x14RLParametersResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12b\n" +
	"\x12current_parameters\x18\x03 \x03(\v23.thesis.RLParametersResponse.CurrentParametersEntryR\x11currentParameters\x1aD\n" +
	"\x16CurrentParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xed\x01\n" +
	"\x15RLAgentControlRequest\x12\x16\n" +
	"\x06action\x18\x01 \x01(\tR\x06action\x12%\n" +
	"\x0ealgorithm_name\x18\x02 \x01(\tR\ralgorithmName\x12T\n" +
	"\rtask_metadata\x18\x03 \x03(\v2/.thesis.RLAgentControlRequest.TaskMetadataEntryR\ftaskMetadata\x1a?\n" +
	"\x11TaskMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa4\x01\n" +
	"\x16RLAgentControlResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12+\n" +
	"\x11current_algorithm\x18\x03 \x01(\tR\x10currentAlgorithm\x12)\n" +
	"\x10learning_enabled\x18\x04 \x01(\bR\x0flearningEnabled\"\x16\n" +
	"\x14RLAgentStatusRequest\"\xa0\x01\n" +
	"\x15RLAgentStatusResponse\x12)\n" +
	"\x10active_algorithm\x18\x01 \x01(\tR\x0factiveAlgorithm\x12)\n" +
	"\x10learning_enabled\x18\x02 \x01(\bR\x0flearningEnabled\x121\n" +
	"\x14available_algorithms\x18\x03 \x03(\tR\x13availableAlgorithms\"\xe5\x02\n" +
	"\x10NodeStateRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12'\n" +
	"\x0fcpu_utilization\x18\x02 \x01(\x01R\x0ecpuUtilization\x12-\n" +
	"\x12memory_utilization\x18\x03 \x01(\x01R\x11memoryUtilization\x12+\n" +
	"\x11network_bandwidth\x18\x04 \x01(\x01R\x10networkBandwidth\x12\x1d\n" +
	"\n" +
	"task_count\x18\x05 \x01(\x05R\ttaskCount\x12R\n" +
	"\x0ecustom_metrics\x18\x06 \x03(\v2+.thesis.NodeStateRequest.CustomMetricsEntryR\rcustomMetrics\x1a@\n" +
	"\x12CustomMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"Q\n" +
	"\x11NodeStateResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x91\x03\n" +
	"\x15TaskAllocationRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12'\n" +
	"\x0fcpu_requirement\x18\x02 \x01(\x01R\x0ecpuRequirement\x12-\n" +
	"\x12memory_requirement\x18\x03 \x01(\x01R\x11memoryRequirement\x123\n" +
	"\x15bandwidth_requirement\x18\x04 \x01(\x01R\x14bandwidthRequirement\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\x12\x1f\n" +
	"\vdeadline_ms\x18\x06 \x01(\x03R\n" +
	"deadlineMs\x12T\n" +
	"\rtask_metadata\x18\a \x03(\v2/.thesis.TaskAllocationRequest.TaskMetadataEntryR\ftaskMetadata\x1a?\n" +
	"\x11TaskMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd0\x01\n" +
	"\x16TaskAllocationResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12*\n" +
	"\x11allocated_node_id\x18\x02 \x01(\tR\x0fallocatedNodeId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12=\n" +
	"\x1bexpected_completion_time_ms\x18\x05 \x01(\x03R\x18expectedCompletionTimeMs\"\xb5\x02\n" +
	"\x12TaskOutcomeRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x125\n" +
	"\x16completed_successfully\x18\x03 \x01(\bR\x15completedSuccessfully\x127\n" +
	"\x18actual_execution_time_ms\x18\x04 \x01(\x03R\x15actualExecutionTimeMs\x12(\n" +
	"\x10actual_cpu_usage\x18\x05 \x01(\x01R\x0eactualCpuUsage\x12.\n" +
	"\x13actual_memory_usage\x18\x06 \x01(\x01R\x11actualMemoryUsage\x12#\n" +
	"\rerror_message\x18\a \x01(\tR\ferrorMessage\"S\n" +
	"\x13TaskOutcomeResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"N\n" +
	"\x12SystemStateRequest\x128\n" +
	"\x18include_detailed_metrics\x18\x01 \x01(\bR\x16includeDetailedMetrics\"\xbb\x02\n" +
	"\x13SystemStateResponse\x12F\n" +
	"\tfog_nodes\x18\x01 \x03(\v2).thesis.SystemStateResponse.FogNodesEntryR\bfogNodes\x12.\n" +
	"\x13total_tasks_running\x18\x02 \x01(\x05R\x11totalTasksRunning\x12,\n" +
	"\x12total_tasks_queued\x18\x03 \x01(\x05R\x10totalTasksQueued\x12.\n" +
	"\x13system_health_score\x18\x04 \x01(\x01R\x11systemHealthScore\x1aN\n" +
	"\rFogNodesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.thesis.NodeStateR\x05value:\x028\x01\"\xfa\x02\n" +
	"\tNodeState\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12'\n" +
	"\x0fcpu_utilization\x18\x02 \x01(\x01R\x0ecpuUtilization\x12-\n" +
	"\x12memory_utilization\x18\x03 \x01(\x01R\x11memoryUtilization\x12+\n" +
	"\x11network_bandwidth\x18\x04 \x01(\x01R\x10networkBandwidth\x12\x1d\n" +
	"\n" +
	"task_count\x18\x05 \x01(\x05R\ttaskCount\x12!\n" +
	"\fis_available\x18\x06 \x01(\bR\visAvailable\x12K\n" +
	"\x0ecustom_metrics\x18\a \x03(\v2$.thesis.NodeState.CustomMetricsEntryR\rcustomMetrics\x1a@\n" +
	"\x12CustomMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x012\x92\x05\n" +
	"\x14FogAllocationService\x12J\n" +
	"\x0fReportNodeState\x12\x18.thesis.NodeStateRequest\x1a\x19.thesis.NodeStateResponse(\x010\x01\x12M\n" +
	"\fAllocateTask\x12\x1d.thesis.TaskAllocationRequest\x1a\x1e.thesis.TaskAllocationResponse\x12L\n" +
	"\x11ReportTaskOutcome\x12\x1a.thesis.TaskOutcomeRequest\x1a\x1b.thesis.TaskOutcomeResponse\x12I\n" +
	"\x0eGetSystemState\x12\x1a.thesis.SystemStateRequest\x1a\x1b.thesis.SystemStateResponse\x12O\n" +
	"\x0eControlRLAgent\x12\x1d.thesis.RLAgentControlRequest\x1a\x1e.thesis.RLAgentControlResponse\x12O\n" +
	"\x10GetRLAgentStatus\x12\x1c.thesis.RLAgentStatusRequest\x1a\x1d.thesis.RLAgentStatusResponse\x12V\n" +
	"\x17GetRLPerformanceMetrics\x12\x1c.thesis.RLPerformanceRequest\x1a\x1d.thesis.RLPerformanceResponse\x12L\n" +
	"\x0fSetRLParameters\x12\x1b.thesis.RLParametersRequest\x1a\x1c.thesis.RLParametersResponseB\x17Z\x15grpc-server/api/protob\x06proto3"

var (
	file_api_proto_service_proto_rawDescOnce sync.Once
	file_api_proto_service_proto_rawDescData []byte
)

func file_api_proto_service_proto_rawDescGZIP() []byte {
	file_api_proto_service_proto_rawDescOnce.Do(func() {
		file_api_proto_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_service_proto_rawDesc), len(file_api_proto_service_proto_rawDesc)))
	})
	return file_api_proto_service_proto_rawDescData
}

var file_api_proto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_api_proto_service_proto_goTypes = []any{
	(*RLPerformanceRequest)(nil),                  // 0: thesis.RLPerformanceRequest
	(*RLPerformanceResponse)(nil),                 // 1: thesis.RLPerformanceResponse
	(*RLParametersRequest)(nil),                   // 2: thesis.RLParametersRequest
	(*RLParametersResponse)(nil),                  // 3: thesis.RLParametersResponse
	(*RLAgentControlRequest)(nil),                 // 4: thesis.RLAgentControlRequest
	(*RLAgentControlResponse)(nil),                // 5: thesis.RLAgentControlResponse
	(*RLAgentStatusRequest)(nil),                  // 6: thesis.RLAgentStatusRequest
	(*RLAgentStatusResponse)(nil),                 // 7: thesis.RLAgentStatusResponse
	(*NodeStateRequest)(nil),                      // 8: thesis.NodeStateRequest
	(*NodeStateResponse)(nil),                     // 9: thesis.NodeStateResponse
	(*TaskAllocationRequest)(nil),                 // 10: thesis.TaskAllocationRequest
	(*TaskAllocationResponse)(nil),                // 11: thesis.TaskAllocationResponse
	(*TaskOutcomeRequest)(nil),                    // 12: thesis.TaskOutcomeRequest
	(*TaskOutcomeResponse)(nil),                   // 13: thesis.TaskOutcomeResponse
	(*SystemStateRequest)(nil),                    // 14: thesis.SystemStateRequest
	(*SystemStateResponse)(nil),                   // 15: thesis.SystemStateResponse
	(*NodeState)(nil),                             // 16: thesis.NodeState
	(*RLPerformanceResponse_AlgorithmMetric)(nil), // 17: thesis.RLPerformanceResponse.AlgorithmMetric
	nil, // 18: thesis.RLPerformanceResponse.AlgorithmMetricsEntry
	(*RLPerformanceResponse_HybridMetric)(nil), // 19: thesis.RLPerformanceResponse.HybridMetric
	nil, // 20: thesis.RLParametersRequest.ParametersEntry
	nil, // 21: thesis.RLParametersResponse.CurrentParametersEntry
	nil, // 22: thesis.RLAgentControlRequest.TaskMetadataEntry
	nil, // 23: thesis.NodeStateRequest.CustomMetricsEntry
	nil, // 24: thesis.TaskAllocationRequest.TaskMetadataEntry
	nil, // 25: thesis.SystemStateResponse.FogNodesEntry
	nil, // 26: thesis.NodeState.CustomMetricsEntry
}
var file_api_proto_service_proto_depIdxs = []int32{
	18, // 0: thesis.RLPerformanceResponse.algorithm_metrics:type_name -> thesis.RLPerformanceResponse.AlgorithmMetricsEntry
	19, // 1: thesis.RLPerformanceResponse.hybrid_metrics:type_name -> thesis.RLPerformanceResponse.HybridMetric
	20, // 2: thesis.RLParametersRequest.parameters:type_name -> thesis.RLParametersRequest.ParametersEntry
	21, // 3: thesis.RLParametersResponse.current_parameters:type_name -> thesis.RLParametersResponse.CurrentParametersEntry
	22, // 4: thesis.RLAgentControlRequest.task_metadata:type_name -> thesis.RLAgentControlRequest.TaskMetadataEntry
	23, // 5: thesis.NodeStateRequest.custom_metrics:type_name -> thesis.NodeStateRequest.CustomMetricsEntry
	24, // 6: thesis.TaskAllocationRequest.task_metadata:type_name -> thesis.TaskAllocationRequest.TaskMetadataEntry
	25, // 7: thesis.SystemStateResponse.fog_nodes:type_name -> thesis.SystemStateResponse.FogNodesEntry
	26, // 8: thesis.NodeState.custom_metrics:type_name -> thesis.NodeState.CustomMetricsEntry
	17, // 9: thesis.RLPerformanceResponse.AlgorithmMetricsEntry.value:type_name -> thesis.RLPerformanceResponse.AlgorithmMetric
	16, // 10: thesis.SystemStateResponse.FogNodesEntry.value:type_name -> thesis.NodeState
	8,  // 11: thesis.FogAllocationService.ReportNodeState:input_type -> thesis.NodeStateRequest
	10, // 12: thesis.FogAllocationService.AllocateTask:input_type -> thesis.TaskAllocationRequest
	12, // 13: thesis.FogAllocationService.ReportTaskOutcome:input_type -> thesis.TaskOutcomeRequest
	14, // 14: thesis.FogAllocationService.GetSystemState:input_type -> thesis.SystemStateRequest
	4,  // 15: thesis.FogAllocationService.ControlRLAgent:input_type -> thesis.RLAgentControlRequest
	6,  // 16: thesis.FogAllocationService.GetRLAgentStatus:input_type -> thesis.RLAgentStatusRequest
	0,  // 17: thesis.FogAllocationService.GetRLPerformanceMetrics:input_type -> thesis.RLPerformanceRequest
	2,  // 18: thesis.FogAllocationService.SetRLParameters:input_type -> thesis.RLParametersRequest
	9,  // 19: thesis.FogAllocationService.ReportNodeState:output_type -> thesis.NodeStateResponse
	11, // 20: thesis.FogAllocationService.AllocateTask:output_type -> thesis.TaskAllocationResponse
	13, // 21: thesis.FogAllocationService.ReportTaskOutcome:output_type -> thesis.TaskOutcomeResponse
	15, // 22: thesis.FogAllocationService.GetSystemState:output_type -> thesis.SystemStateResponse
	5,  // 23: thesis.FogAllocationService.ControlRLAgent:output_type -> thesis.RLAgentControlResponse
	7,  // 24: thesis.FogAllocationService.GetRLAgentStatus:output_type -> thesis.RLAgentStatusResponse
	1,  // 25: thesis.FogAllocationService.GetRLPerformanceMetrics:output_type -> thesis.RLPerformanceResponse
	3,  // 26: thesis.FogAllocationService.SetRLParameters:output_type -> thesis.RLParametersResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_proto_service_proto_init() }
func file_api_proto_service_proto_init() {
	if File_api_proto_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_service_proto_rawDesc), len(file_api_proto_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_service_proto_goTypes,
		DependencyIndexes: file_api_proto_service_proto_depIdxs,
		MessageInfos:      file_api_proto_service_proto_msgTypes,
	}.Build()
	File_api_proto_service_proto = out.File
	file_api_proto_service_proto_goTypes = nil
	file_api_proto_service_proto_depIdxs = nil
}
